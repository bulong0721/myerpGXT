package org.adempiere.model;

import javax.persistence.*;

/**
 * Auto-generated by:
 * org.adempiere.AdempiereCustomizer
 */
@Entity
@Table(name="ad_attribute")
public class ADAttribute extends org.adempiere.common.ADEntityBase {
	private static final long serialVersionUID = 1L;
	private Integer aDAttributeID;
	private Integer aDClientID;
	private Integer aDOrgID;
	private Integer aDReferenceID;
	private Integer aDReferenceValueID;
	private Integer aDTableID;
	private Integer aDValRuleID;
	private Boolean active;
	private String callout;
	private String created;
	private Integer createdBy;
	private String defaultValue;
	private String description;
	private Integer displayLength;
	private String displayLogic;
	private Boolean encrypted;
	private Integer fieldLength;
	private Boolean fieldOnly;
	private Boolean heading;
	private String help;
	private Boolean mandatory;
	private String name;
	private Boolean readOnly;
	private Boolean sameLine;
	private Integer seqNo;
	private Boolean updateable;
	private String updated;
	private Integer updatedBy;
	private String vFormat;
	private String valueMax;
	private String valueMin;

	public ADAttribute() {
	}

	public ADAttribute(Integer aDAttributeID) {
		this.aDAttributeID = aDAttributeID;
	}

	@Id
	@Column(name="AD_ATTRIBUTE_ID", columnDefinition="INT")
	@TableGenerator(name = "PkGen_342", table = "ad_sequence", pkColumnName = "name", pkColumnValue = "AD_Attribute", valueColumnName = "currentnextsys", allocationSize = 1 )
	@GeneratedValue(strategy = GenerationType.TABLE, generator = "PkGen_342")
	public Integer getADAttributeID() {
		return aDAttributeID;
	}

	public void setADAttributeID(Integer aDAttributeID) {
		this.aDAttributeID = aDAttributeID;
	}

	@Basic
	@Column(name="AD_CLIENT_ID", columnDefinition="INT", nullable=false)
	public Integer getADClientID() {
		return aDClientID;
	}

	public void setADClientID(Integer aDClientID) {
		this.aDClientID = aDClientID;
	}

	@Basic
	@Column(name="AD_ORG_ID", columnDefinition="INT", nullable=false)
	public Integer getADOrgID() {
		return aDOrgID;
	}

	public void setADOrgID(Integer aDOrgID) {
		this.aDOrgID = aDOrgID;
	}

	@Basic
	@Column(name="AD_REFERENCE_ID", columnDefinition="INT", nullable=false)
	public Integer getADReferenceID() {
		return aDReferenceID;
	}

	public void setADReferenceID(Integer aDReferenceID) {
		this.aDReferenceID = aDReferenceID;
	}

	@Basic
	@Column(name="AD_REFERENCE_VALUE_ID", columnDefinition="INT")
	public Integer getADReferenceValueID() {
		return aDReferenceValueID;
	}

	public void setADReferenceValueID(Integer aDReferenceValueID) {
		this.aDReferenceValueID = aDReferenceValueID;
	}

	@Basic
	@Column(name="AD_TABLE_ID", columnDefinition="INT", nullable=false)
	public Integer getADTableID() {
		return aDTableID;
	}

	public void setADTableID(Integer aDTableID) {
		this.aDTableID = aDTableID;
	}

	@Basic
	@Column(name="AD_VAL_RULE_ID", columnDefinition="INT")
	public Integer getADValRuleID() {
		return aDValRuleID;
	}

	public void setADValRuleID(Integer aDValRuleID) {
		this.aDValRuleID = aDValRuleID;
	}

	@Basic
	@Column(name="ISACTIVE", nullable=false)
	public Boolean isActive() {
		return active;
	}

	public void setActive(Boolean active) {
		this.active = active;
	}

	@Basic
	@Column(length=60)
	public String getCallout() {
		return callout;
	}

	public void setCallout(String callout) {
		this.callout = callout;
	}

	@Basic
	@Column(columnDefinition="TIMESTAMP", nullable=false)
	public String getCreated() {
		return created;
	}

	public void setCreated(String created) {
		this.created = created;
	}

	@Basic
	@Column(columnDefinition="INT", nullable=false)
	public Integer getCreatedBy() {
		return createdBy;
	}

	public void setCreatedBy(Integer createdBy) {
		this.createdBy = createdBy;
	}

	@Basic
	@Column(length=2000)
	public String getDefaultValue() {
		return defaultValue;
	}

	public void setDefaultValue(String defaultValue) {
		this.defaultValue = defaultValue;
	}

	@Basic
	public String getDescription() {
		return description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Basic
	@Column(columnDefinition="INT")
	public Integer getDisplayLength() {
		return displayLength;
	}

	public void setDisplayLength(Integer displayLength) {
		this.displayLength = displayLength;
	}

	@Basic
	@Column(length=2000)
	public String getDisplayLogic() {
		return displayLogic;
	}

	public void setDisplayLogic(String displayLogic) {
		this.displayLogic = displayLogic;
	}

	@Basic
	@Column(name="ISENCRYPTED", nullable=false)
	public Boolean isEncrypted() {
		return encrypted;
	}

	public void setEncrypted(Boolean encrypted) {
		this.encrypted = encrypted;
	}

	@Basic
	@Column(columnDefinition="INT")
	public Integer getFieldLength() {
		return fieldLength;
	}

	public void setFieldLength(Integer fieldLength) {
		this.fieldLength = fieldLength;
	}

	@Basic
	@Column(name="ISFIELDONLY", nullable=false)
	public Boolean isFieldOnly() {
		return fieldOnly;
	}

	public void setFieldOnly(Boolean fieldOnly) {
		this.fieldOnly = fieldOnly;
	}

	@Basic
	@Column(name="ISHEADING", nullable=false)
	public Boolean isHeading() {
		return heading;
	}

	public void setHeading(Boolean heading) {
		this.heading = heading;
	}

	@Basic
	@Column(length=2000)
	public String getHelp() {
		return help;
	}

	public void setHelp(String help) {
		this.help = help;
	}

	@Basic
	@Column(name="ISMANDATORY", nullable=false)
	public Boolean isMandatory() {
		return mandatory;
	}

	public void setMandatory(Boolean mandatory) {
		this.mandatory = mandatory;
	}

	@Basic
	@Column(nullable=false, length=60)
	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Basic
	@Column(name="ISREADONLY", nullable=false)
	public Boolean isReadOnly() {
		return readOnly;
	}

	public void setReadOnly(Boolean readOnly) {
		this.readOnly = readOnly;
	}

	@Basic
	@Column(name="ISSAMELINE", nullable=false)
	public Boolean isSameLine() {
		return sameLine;
	}

	public void setSameLine(Boolean sameLine) {
		this.sameLine = sameLine;
	}

	@Basic
	@Column(columnDefinition="INT")
	public Integer getSeqNo() {
		return seqNo;
	}

	public void setSeqNo(Integer seqNo) {
		this.seqNo = seqNo;
	}

	@Basic
	@Column(name="ISUPDATEABLE", nullable=false)
	public Boolean isUpdateable() {
		return updateable;
	}

	public void setUpdateable(Boolean updateable) {
		this.updateable = updateable;
	}

	@Basic
	@Column(columnDefinition="TIMESTAMP", nullable=false)
	public String getUpdated() {
		return updated;
	}

	public void setUpdated(String updated) {
		this.updated = updated;
	}

	@Basic
	@Column(columnDefinition="INT", nullable=false)
	public Integer getUpdatedBy() {
		return updatedBy;
	}

	public void setUpdatedBy(Integer updatedBy) {
		this.updatedBy = updatedBy;
	}

	@Basic
	@Column(length=60)
	public String getVFormat() {
		return vFormat;
	}

	public void setVFormat(String vFormat) {
		this.vFormat = vFormat;
	}

	@Basic
	@Column(length=20)
	public String getValueMax() {
		return valueMax;
	}

	public void setValueMax(String valueMax) {
		this.valueMax = valueMax;
	}

	@Basic
	@Column(length=20)
	public String getValueMin() {
		return valueMin;
	}

	public void setValueMin(String valueMin) {
		this.valueMin = valueMin;
	}
}