package org.adempiere.model;

import javax.persistence.*;

/**
 * Auto-generated by:
 * org.adempiere.AdempiereCustomizer
 */
@Entity
@Table(name="c_doctype")
public class CDoctype extends org.adempiere.common.ADEntityBase {
	private static final long serialVersionUID = 1L;
	private Integer adClientId;
	private Integer adOrgId;
	private Integer adPrintformatId;
	private Integer cDoctypeId;
	private Integer cDoctypedifferenceId;
	private Integer cDoctypeinvoiceId;
	private Integer cDoctypeproformaId;
	private Integer cDoctypeshipmentId;
	private String created;
	private Integer createdby;
	private Integer definitesequenceId;
	private String description;
	private String docbasetype;
	private Integer docnosequenceId;
	private String docsubtypeso;
	private Integer documentcopies;
	private String documentnote;
	private Integer glCategoryId;
	private String hascharges;
	private String hasproforma;
	private Boolean isactive;
	private Boolean iscreatecounter;
	private Boolean isdefault;
	private Boolean isdefaultcounterdoc;
	private Boolean isdocnocontrolled;
	private Boolean isindexed;
	private Boolean isintransit;
	private Boolean isoverwritedateoncomplete;
	private Boolean isoverwriteseqoncomplete;
	private Boolean ispickqaconfirm;
	private Boolean ispreparesplitdocument;
	private Boolean isshipconfirm;
	private Boolean issotrx;
	private Boolean issplitwhendifference;
	private String name;
	private String printname;
	private String updated;
	private Integer updatedby;

	public CDoctype() {
	}

	public CDoctype(Integer cDoctypeId) {
		this.cDoctypeId = cDoctypeId;
	}

	@Basic
	@Column(name="AD_CLIENT_ID", columnDefinition="INT", nullable=false)
	public Integer getAdClientId() {
		return adClientId;
	}

	public void setAdClientId(Integer adClientId) {
		this.adClientId = adClientId;
	}

	@Basic
	@Column(name="AD_ORG_ID", columnDefinition="INT", nullable=false)
	public Integer getAdOrgId() {
		return adOrgId;
	}

	public void setAdOrgId(Integer adOrgId) {
		this.adOrgId = adOrgId;
	}

	@Basic
	@Column(name="AD_PRINTFORMAT_ID", columnDefinition="INT")
	public Integer getAdPrintformatId() {
		return adPrintformatId;
	}

	public void setAdPrintformatId(Integer adPrintformatId) {
		this.adPrintformatId = adPrintformatId;
	}

	@Id
	@Column(name="C_DOCTYPE_ID", columnDefinition="INT")
	public Integer getCDoctypeId() {
		return cDoctypeId;
	}

	public void setCDoctypeId(Integer cDoctypeId) {
		this.cDoctypeId = cDoctypeId;
	}

	@Basic
	@Column(name="C_DOCTYPEDIFFERENCE_ID", columnDefinition="INT")
	public Integer getCDoctypedifferenceId() {
		return cDoctypedifferenceId;
	}

	public void setCDoctypedifferenceId(Integer cDoctypedifferenceId) {
		this.cDoctypedifferenceId = cDoctypedifferenceId;
	}

	@Basic
	@Column(name="C_DOCTYPEINVOICE_ID", columnDefinition="INT")
	public Integer getCDoctypeinvoiceId() {
		return cDoctypeinvoiceId;
	}

	public void setCDoctypeinvoiceId(Integer cDoctypeinvoiceId) {
		this.cDoctypeinvoiceId = cDoctypeinvoiceId;
	}

	@Basic
	@Column(name="C_DOCTYPEPROFORMA_ID", columnDefinition="INT")
	public Integer getCDoctypeproformaId() {
		return cDoctypeproformaId;
	}

	public void setCDoctypeproformaId(Integer cDoctypeproformaId) {
		this.cDoctypeproformaId = cDoctypeproformaId;
	}

	@Basic
	@Column(name="C_DOCTYPESHIPMENT_ID", columnDefinition="INT")
	public Integer getCDoctypeshipmentId() {
		return cDoctypeshipmentId;
	}

	public void setCDoctypeshipmentId(Integer cDoctypeshipmentId) {
		this.cDoctypeshipmentId = cDoctypeshipmentId;
	}

	@Basic
	@Column(columnDefinition="TIMESTAMP", nullable=false)
	public String getCreated() {
		return created;
	}

	public void setCreated(String created) {
		this.created = created;
	}

	@Basic
	@Column(columnDefinition="INT", nullable=false)
	public Integer getCreatedby() {
		return createdby;
	}

	public void setCreatedby(Integer createdby) {
		this.createdby = createdby;
	}

	@Basic
	@Column(name="DEFINITESEQUENCE_ID", columnDefinition="INT")
	public Integer getDefinitesequenceId() {
		return definitesequenceId;
	}

	public void setDefinitesequenceId(Integer definitesequenceId) {
		this.definitesequenceId = definitesequenceId;
	}

	@Basic
	public String getDescription() {
		return description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Basic
	@Column(nullable=false, length=3)
	public String getDocbasetype() {
		return docbasetype;
	}

	public void setDocbasetype(String docbasetype) {
		this.docbasetype = docbasetype;
	}

	@Basic
	@Column(name="DOCNOSEQUENCE_ID", columnDefinition="INT")
	public Integer getDocnosequenceId() {
		return docnosequenceId;
	}

	public void setDocnosequenceId(Integer docnosequenceId) {
		this.docnosequenceId = docnosequenceId;
	}

	@Basic
	@Column(length=2)
	public String getDocsubtypeso() {
		return docsubtypeso;
	}

	public void setDocsubtypeso(String docsubtypeso) {
		this.docsubtypeso = docsubtypeso;
	}

	@Basic
	@Column(columnDefinition="INT", nullable=false)
	public Integer getDocumentcopies() {
		return documentcopies;
	}

	public void setDocumentcopies(Integer documentcopies) {
		this.documentcopies = documentcopies;
	}

	@Basic
	@Column(length=2000)
	public String getDocumentnote() {
		return documentnote;
	}

	public void setDocumentnote(String documentnote) {
		this.documentnote = documentnote;
	}

	@Basic
	@Column(name="GL_CATEGORY_ID", columnDefinition="INT", nullable=false)
	public Integer getGlCategoryId() {
		return glCategoryId;
	}

	public void setGlCategoryId(Integer glCategoryId) {
		this.glCategoryId = glCategoryId;
	}

	@Basic
	@Column(nullable=false, length=1)
	public String getHascharges() {
		return hascharges;
	}

	public void setHascharges(String hascharges) {
		this.hascharges = hascharges;
	}

	@Basic
	@Column(length=1)
	public String getHasproforma() {
		return hasproforma;
	}

	public void setHasproforma(String hasproforma) {
		this.hasproforma = hasproforma;
	}

	@Basic
	@Column(nullable=false)
	public Boolean isIsactive() {
		return isactive;
	}

	public void setIsactive(Boolean isactive) {
		this.isactive = isactive;
	}

	@Basic
	@Column(nullable=false)
	public Boolean isIscreatecounter() {
		return iscreatecounter;
	}

	public void setIscreatecounter(Boolean iscreatecounter) {
		this.iscreatecounter = iscreatecounter;
	}

	@Basic
	@Column(nullable=false)
	public Boolean isIsdefault() {
		return isdefault;
	}

	public void setIsdefault(Boolean isdefault) {
		this.isdefault = isdefault;
	}

	@Basic
	@Column(nullable=false)
	public Boolean isIsdefaultcounterdoc() {
		return isdefaultcounterdoc;
	}

	public void setIsdefaultcounterdoc(Boolean isdefaultcounterdoc) {
		this.isdefaultcounterdoc = isdefaultcounterdoc;
	}

	@Basic
	@Column(nullable=false)
	public Boolean isIsdocnocontrolled() {
		return isdocnocontrolled;
	}

	public void setIsdocnocontrolled(Boolean isdocnocontrolled) {
		this.isdocnocontrolled = isdocnocontrolled;
	}

	@Basic
	@Column(nullable=false)
	public Boolean isIsindexed() {
		return isindexed;
	}

	public void setIsindexed(Boolean isindexed) {
		this.isindexed = isindexed;
	}

	@Basic
	@Column(nullable=false)
	public Boolean isIsintransit() {
		return isintransit;
	}

	public void setIsintransit(Boolean isintransit) {
		this.isintransit = isintransit;
	}

	@Basic
	public Boolean isIsoverwritedateoncomplete() {
		return isoverwritedateoncomplete;
	}

	public void setIsoverwritedateoncomplete(Boolean isoverwritedateoncomplete) {
		this.isoverwritedateoncomplete = isoverwritedateoncomplete;
	}

	@Basic
	public Boolean isIsoverwriteseqoncomplete() {
		return isoverwriteseqoncomplete;
	}

	public void setIsoverwriteseqoncomplete(Boolean isoverwriteseqoncomplete) {
		this.isoverwriteseqoncomplete = isoverwriteseqoncomplete;
	}

	@Basic
	@Column(nullable=false)
	public Boolean isIspickqaconfirm() {
		return ispickqaconfirm;
	}

	public void setIspickqaconfirm(Boolean ispickqaconfirm) {
		this.ispickqaconfirm = ispickqaconfirm;
	}

	@Basic
	@Column(nullable=false)
	public Boolean isIspreparesplitdocument() {
		return ispreparesplitdocument;
	}

	public void setIspreparesplitdocument(Boolean ispreparesplitdocument) {
		this.ispreparesplitdocument = ispreparesplitdocument;
	}

	@Basic
	@Column(nullable=false)
	public Boolean isIsshipconfirm() {
		return isshipconfirm;
	}

	public void setIsshipconfirm(Boolean isshipconfirm) {
		this.isshipconfirm = isshipconfirm;
	}

	@Basic
	@Column(nullable=false)
	public Boolean isIssotrx() {
		return issotrx;
	}

	public void setIssotrx(Boolean issotrx) {
		this.issotrx = issotrx;
	}

	@Basic
	@Column(nullable=false)
	public Boolean isIssplitwhendifference() {
		return issplitwhendifference;
	}

	public void setIssplitwhendifference(Boolean issplitwhendifference) {
		this.issplitwhendifference = issplitwhendifference;
	}

	@Basic
	@Column(nullable=false, length=60)
	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Basic
	@Column(nullable=false, length=60)
	public String getPrintname() {
		return printname;
	}

	public void setPrintname(String printname) {
		this.printname = printname;
	}

	@Basic
	@Column(columnDefinition="TIMESTAMP", nullable=false)
	public String getUpdated() {
		return updated;
	}

	public void setUpdated(String updated) {
		this.updated = updated;
	}

	@Basic
	@Column(columnDefinition="INT", nullable=false)
	public Integer getUpdatedby() {
		return updatedby;
	}

	public void setUpdatedby(Integer updatedby) {
		this.updatedby = updatedby;
	}
}