package org.adempiere.model;

import java.math.*;
import javax.persistence.*;

/**
 * Auto-generated by:
 * org.adempiere.AdempiereCustomizer
 */
@Entity
@Table(name="c_commissionline")
public class CCommissionLine extends org.adempiere.common.ADEntityBase {
	private static final long serialVersionUID = 1L;
	private Integer aDClientID;
	private Integer aDOrgID;
	private Boolean active;
	private BigDecimal amtMultiplier;
	private BigDecimal amtSubtract;
	private Integer cBPGroupID;
	private Integer cBPartnerID;
	private Integer cCommissionID;
	private Integer cCommissionLineID;
	private Integer cSalesRegionID;
	private Boolean commissionOrders;
	private String created;
	private Integer createdBy;
	private String description;
	private Integer line;
	private Integer mProductCategoryID;
	private Integer mProductID;
	private Integer orgID;
	private String paymentRule;
	private Boolean positiveOnly;
	private BigDecimal qtyMultiplier;
	private BigDecimal qtySubtract;
	private String updated;
	private Integer updatedBy;

	public CCommissionLine() {
	}

	public CCommissionLine(Integer cCommissionLineID) {
		this.cCommissionLineID = cCommissionLineID;
	}

	@Basic
	@Column(name="AD_CLIENT_ID", columnDefinition="INT", nullable=false)
	public Integer getADClientID() {
		return aDClientID;
	}

	public void setADClientID(Integer aDClientID) {
		this.aDClientID = aDClientID;
	}

	@Basic
	@Column(name="AD_ORG_ID", columnDefinition="INT", nullable=false)
	public Integer getADOrgID() {
		return aDOrgID;
	}

	public void setADOrgID(Integer aDOrgID) {
		this.aDOrgID = aDOrgID;
	}

	@Basic
	@Column(name="ISACTIVE", nullable=false)
	public Boolean isActive() {
		return active;
	}

	public void setActive(Boolean active) {
		this.active = active;
	}

	@Basic
	@Column(nullable=false)
	public BigDecimal getAmtMultiplier() {
		return amtMultiplier;
	}

	public void setAmtMultiplier(BigDecimal amtMultiplier) {
		this.amtMultiplier = amtMultiplier;
	}

	@Basic
	@Column(nullable=false)
	public BigDecimal getAmtSubtract() {
		return amtSubtract;
	}

	public void setAmtSubtract(BigDecimal amtSubtract) {
		this.amtSubtract = amtSubtract;
	}

	@Basic
	@Column(name="C_BP_GROUP_ID", columnDefinition="INT")
	public Integer getCBPGroupID() {
		return cBPGroupID;
	}

	public void setCBPGroupID(Integer cBPGroupID) {
		this.cBPGroupID = cBPGroupID;
	}

	@Basic
	@Column(name="C_BPARTNER_ID", columnDefinition="INT")
	public Integer getCBPartnerID() {
		return cBPartnerID;
	}

	public void setCBPartnerID(Integer cBPartnerID) {
		this.cBPartnerID = cBPartnerID;
	}

	@Basic
	@Column(name="C_COMMISSION_ID", columnDefinition="INT", nullable=false)
	public Integer getCCommissionID() {
		return cCommissionID;
	}

	public void setCCommissionID(Integer cCommissionID) {
		this.cCommissionID = cCommissionID;
	}

	@Id
	@Column(name="C_COMMISSIONLINE_ID", columnDefinition="INT")
	@TableGenerator(name = "PkGen_368", table = "ad_sequence", pkColumnName = "name", pkColumnValue = "C_CommissionLine", valueColumnName = "currentnextsys", allocationSize = 1 )
	@GeneratedValue(strategy = GenerationType.TABLE, generator = "PkGen_368")
	public Integer getCCommissionLineID() {
		return cCommissionLineID;
	}

	public void setCCommissionLineID(Integer cCommissionLineID) {
		this.cCommissionLineID = cCommissionLineID;
	}

	@Basic
	@Column(name="C_SALESREGION_ID", columnDefinition="INT")
	public Integer getCSalesRegionID() {
		return cSalesRegionID;
	}

	public void setCSalesRegionID(Integer cSalesRegionID) {
		this.cSalesRegionID = cSalesRegionID;
	}

	@Basic
	@Column(nullable=false)
	public Boolean isCommissionOrders() {
		return commissionOrders;
	}

	public void setCommissionOrders(Boolean commissionOrders) {
		this.commissionOrders = commissionOrders;
	}

	@Basic
	@Column(columnDefinition="TIMESTAMP", nullable=false)
	public String getCreated() {
		return created;
	}

	public void setCreated(String created) {
		this.created = created;
	}

	@Basic
	@Column(columnDefinition="INT", nullable=false)
	public Integer getCreatedBy() {
		return createdBy;
	}

	public void setCreatedBy(Integer createdBy) {
		this.createdBy = createdBy;
	}

	@Basic
	public String getDescription() {
		return description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Basic
	@Column(columnDefinition="INT", nullable=false)
	public Integer getLine() {
		return line;
	}

	public void setLine(Integer line) {
		this.line = line;
	}

	@Basic
	@Column(name="M_PRODUCT_CATEGORY_ID", columnDefinition="INT")
	public Integer getMProductCategoryID() {
		return mProductCategoryID;
	}

	public void setMProductCategoryID(Integer mProductCategoryID) {
		this.mProductCategoryID = mProductCategoryID;
	}

	@Basic
	@Column(name="M_PRODUCT_ID", columnDefinition="INT")
	public Integer getMProductID() {
		return mProductID;
	}

	public void setMProductID(Integer mProductID) {
		this.mProductID = mProductID;
	}

	@Basic
	@Column(name="ORG_ID", columnDefinition="INT")
	public Integer getOrgID() {
		return orgID;
	}

	public void setOrgID(Integer orgID) {
		this.orgID = orgID;
	}

	@Basic
	@Column(length=1)
	public String getPaymentRule() {
		return paymentRule;
	}

	public void setPaymentRule(String paymentRule) {
		this.paymentRule = paymentRule;
	}

	@Basic
	@Column(name="ISPOSITIVEONLY", nullable=false)
	public Boolean isPositiveOnly() {
		return positiveOnly;
	}

	public void setPositiveOnly(Boolean positiveOnly) {
		this.positiveOnly = positiveOnly;
	}

	@Basic
	@Column(nullable=false)
	public BigDecimal getQtyMultiplier() {
		return qtyMultiplier;
	}

	public void setQtyMultiplier(BigDecimal qtyMultiplier) {
		this.qtyMultiplier = qtyMultiplier;
	}

	@Basic
	@Column(nullable=false)
	public BigDecimal getQtySubtract() {
		return qtySubtract;
	}

	public void setQtySubtract(BigDecimal qtySubtract) {
		this.qtySubtract = qtySubtract;
	}

	@Basic
	@Column(columnDefinition="TIMESTAMP", nullable=false)
	public String getUpdated() {
		return updated;
	}

	public void setUpdated(String updated) {
		this.updated = updated;
	}

	@Basic
	@Column(columnDefinition="INT", nullable=false)
	public Integer getUpdatedBy() {
		return updatedBy;
	}

	public void setUpdatedBy(Integer updatedBy) {
		this.updatedBy = updatedBy;
	}
}