package org.adempiere.model;

import java.math.*;
import javax.persistence.*;

/**
 * Auto-generated by:
 * org.adempiere.AdempiereCustomizer
 */
@Entity
@Table(name="m_movementlineconfirm")
public class MMovementlineconfirm extends org.adempiere.common.ADEntityBase {
	private static final long serialVersionUID = 1L;
	private Integer adClientId;
	private Integer adOrgId;
	private BigDecimal confirmedqty;
	private String created;
	private Integer createdby;
	private String description;
	private BigDecimal differenceqty;
	private Boolean isactive;
	private Integer mInventorylineId;
	private Integer mMovementconfirmId;
	private Integer mMovementlineId;
	private Integer mMovementlineconfirmId;
	private Boolean processed;
	private BigDecimal scrappedqty;
	private BigDecimal targetqty;
	private String updated;
	private Integer updatedby;

	public MMovementlineconfirm() {
	}

	public MMovementlineconfirm(Integer mMovementlineconfirmId) {
		this.mMovementlineconfirmId = mMovementlineconfirmId;
	}

	@Basic
	@Column(name="AD_CLIENT_ID", columnDefinition="INT", nullable=false)
	public Integer getAdClientId() {
		return adClientId;
	}

	public void setAdClientId(Integer adClientId) {
		this.adClientId = adClientId;
	}

	@Basic
	@Column(name="AD_ORG_ID", columnDefinition="INT", nullable=false)
	public Integer getAdOrgId() {
		return adOrgId;
	}

	public void setAdOrgId(Integer adOrgId) {
		this.adOrgId = adOrgId;
	}

	@Basic
	@Column(nullable=false)
	public BigDecimal getConfirmedqty() {
		return confirmedqty;
	}

	public void setConfirmedqty(BigDecimal confirmedqty) {
		this.confirmedqty = confirmedqty;
	}

	@Basic
	@Column(columnDefinition="TIMESTAMP", nullable=false)
	public String getCreated() {
		return created;
	}

	public void setCreated(String created) {
		this.created = created;
	}

	@Basic
	@Column(columnDefinition="INT", nullable=false)
	public Integer getCreatedby() {
		return createdby;
	}

	public void setCreatedby(Integer createdby) {
		this.createdby = createdby;
	}

	@Basic
	public String getDescription() {
		return description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Basic
	@Column(nullable=false)
	public BigDecimal getDifferenceqty() {
		return differenceqty;
	}

	public void setDifferenceqty(BigDecimal differenceqty) {
		this.differenceqty = differenceqty;
	}

	@Basic
	@Column(nullable=false)
	public Boolean isIsactive() {
		return isactive;
	}

	public void setIsactive(Boolean isactive) {
		this.isactive = isactive;
	}

	@Basic
	@Column(name="M_INVENTORYLINE_ID", columnDefinition="INT")
	public Integer getMInventorylineId() {
		return mInventorylineId;
	}

	public void setMInventorylineId(Integer mInventorylineId) {
		this.mInventorylineId = mInventorylineId;
	}

	@Basic
	@Column(name="M_MOVEMENTCONFIRM_ID", columnDefinition="INT", nullable=false)
	public Integer getMMovementconfirmId() {
		return mMovementconfirmId;
	}

	public void setMMovementconfirmId(Integer mMovementconfirmId) {
		this.mMovementconfirmId = mMovementconfirmId;
	}

	@Basic
	@Column(name="M_MOVEMENTLINE_ID", columnDefinition="INT", nullable=false)
	public Integer getMMovementlineId() {
		return mMovementlineId;
	}

	public void setMMovementlineId(Integer mMovementlineId) {
		this.mMovementlineId = mMovementlineId;
	}

	@Id
	@Column(name="M_MOVEMENTLINECONFIRM_ID", columnDefinition="INT")
	@TableGenerator(name = "PkGen_982", table = "ad_sequence", pkColumnName = "name", pkColumnValue = "M_MovementLineConfirm", valueColumnName = "currentnextsys", allocationSize = 1 )
	@GeneratedValue(strategy = GenerationType.TABLE, generator = "PkGen_982")
	public Integer getMMovementlineconfirmId() {
		return mMovementlineconfirmId;
	}

	public void setMMovementlineconfirmId(Integer mMovementlineconfirmId) {
		this.mMovementlineconfirmId = mMovementlineconfirmId;
	}

	@Basic
	@Column(nullable=false)
	public Boolean isProcessed() {
		return processed;
	}

	public void setProcessed(Boolean processed) {
		this.processed = processed;
	}

	@Basic
	@Column(nullable=false)
	public BigDecimal getScrappedqty() {
		return scrappedqty;
	}

	public void setScrappedqty(BigDecimal scrappedqty) {
		this.scrappedqty = scrappedqty;
	}

	@Basic
	@Column(nullable=false)
	public BigDecimal getTargetqty() {
		return targetqty;
	}

	public void setTargetqty(BigDecimal targetqty) {
		this.targetqty = targetqty;
	}

	@Basic
	@Column(columnDefinition="TIMESTAMP", nullable=false)
	public String getUpdated() {
		return updated;
	}

	public void setUpdated(String updated) {
		this.updated = updated;
	}

	@Basic
	@Column(columnDefinition="INT", nullable=false)
	public Integer getUpdatedby() {
		return updatedby;
	}

	public void setUpdatedby(Integer updatedby) {
		this.updatedby = updatedby;
	}
}