package org.adempiere.model;

import java.io.*;
import java.util.*;

/**
 * Application identity class for: org.adempiere.model.AdChangelog
 *
 * Auto-generated by:
 * org.apache.openjpa.enhance.ApplicationIdTool
 */
public class AdChangelogPK implements Serializable {
	static {
		// register persistent class in JVM
		try { Class.forName("org.adempiere.model.AdChangelog"); }
		catch(Exception e) {}
	}

	public Integer adChangelogId;
	public Integer adColumnId;
	public Integer adSessionId;
	public Integer adTableId;

	public AdChangelogPK() {
	}

	public AdChangelogPK(String str) {
		fromString(str);
	}

	public Integer getAdChangelogId() {
		return adChangelogId;
	}

	public void setAdChangelogId(Integer adChangelogId) {
		this.adChangelogId = adChangelogId;
	}

	public Integer getAdColumnId() {
		return adColumnId;
	}

	public void setAdColumnId(Integer adColumnId) {
		this.adColumnId = adColumnId;
	}

	public Integer getAdSessionId() {
		return adSessionId;
	}

	public void setAdSessionId(Integer adSessionId) {
		this.adSessionId = adSessionId;
	}

	public Integer getAdTableId() {
		return adTableId;
	}

	public void setAdTableId(Integer adTableId) {
		this.adTableId = adTableId;
	}

	public String toString() {
		return String.valueOf(adChangelogId)
			+ "::" + String.valueOf(adColumnId)
			+ "::" + String.valueOf(adSessionId)
			+ "::" + String.valueOf(adTableId);
	}

	public int hashCode() {
		int rs = 17;
		rs = rs * 37 + ((adChangelogId == null) ? 0 : adChangelogId.hashCode());
		rs = rs * 37 + ((adColumnId == null) ? 0 : adColumnId.hashCode());
		rs = rs * 37 + ((adSessionId == null) ? 0 : adSessionId.hashCode());
		rs = rs * 37 + ((adTableId == null) ? 0 : adTableId.hashCode());
		return rs;
	}

	public boolean equals(Object obj) {
		if(this == obj)
			return true;
		if(obj == null || obj.getClass() != getClass())
			return false;

		AdChangelogPK other = (AdChangelogPK) obj;
		return ((adChangelogId == null && other.adChangelogId == null)
			|| (adChangelogId != null && adChangelogId.equals(other.adChangelogId)))
			&& ((adColumnId == null && other.adColumnId == null)
			|| (adColumnId != null && adColumnId.equals(other.adColumnId)))
			&& ((adSessionId == null && other.adSessionId == null)
			|| (adSessionId != null && adSessionId.equals(other.adSessionId)))
			&& ((adTableId == null && other.adTableId == null)
			|| (adTableId != null && adTableId.equals(other.adTableId)));
	}

	private void fromString(String str) {
		Tokenizer toke = new Tokenizer(str);
		str = toke.nextToken();
		if("null".equals(str))
			adChangelogId = null;
		else
			adChangelogId = new Integer(str);
		str = toke.nextToken();
		if("null".equals(str))
			adColumnId = null;
		else
			adColumnId = new Integer(str);
		str = toke.nextToken();
		if("null".equals(str))
			adSessionId = null;
		else
			adSessionId = new Integer(str);
		str = toke.nextToken();
		if("null".equals(str))
			adTableId = null;
		else
			adTableId = new Integer(str);
	}

	protected static class Tokenizer {
		private final String str;
		private int last;

		public Tokenizer (String str) {
			this.str = str;
		}

		public String nextToken () {
			int next = str.indexOf("::", last);
			String part;
			if(next == -1) {
				part = str.substring(last);
				last = str.length();
			} else {
				part = str.substring(last, next);
				last = next + 2;
			}
			return part;
		}
	}
}