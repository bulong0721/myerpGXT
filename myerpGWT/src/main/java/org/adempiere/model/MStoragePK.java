package org.adempiere.model;

import java.io.*;
import java.util.*;

/**
 * Application identity class for: org.adempiere.model.MStorage
 *
 * Auto-generated by:
 * org.apache.openjpa.enhance.ApplicationIdTool
 */
public class MStoragePK implements Serializable {
	static {
		// register persistent class in JVM
		try { Class.forName("org.adempiere.model.MStorage"); }
		catch(Exception e) {}
	}

	public Integer mAttributeSetInstanceID;
	public Integer mLocatorID;
	public Integer mProductID;

	public MStoragePK() {
	}

	public MStoragePK(String str) {
		fromString(str);
	}

	public Integer getMAttributeSetInstanceID() {
		return mAttributeSetInstanceID;
	}

	public void setMAttributeSetInstanceID(Integer mAttributeSetInstanceID) {
		this.mAttributeSetInstanceID = mAttributeSetInstanceID;
	}

	public Integer getMLocatorID() {
		return mLocatorID;
	}

	public void setMLocatorID(Integer mLocatorID) {
		this.mLocatorID = mLocatorID;
	}

	public Integer getMProductID() {
		return mProductID;
	}

	public void setMProductID(Integer mProductID) {
		this.mProductID = mProductID;
	}

	public String toString() {
		return String.valueOf(mAttributeSetInstanceID)
			+ "::" + String.valueOf(mLocatorID)
			+ "::" + String.valueOf(mProductID);
	}

	public int hashCode() {
		int rs = 17;
		rs = rs * 37 + ((mAttributeSetInstanceID == null) ? 0 : mAttributeSetInstanceID.hashCode());
		rs = rs * 37 + ((mLocatorID == null) ? 0 : mLocatorID.hashCode());
		rs = rs * 37 + ((mProductID == null) ? 0 : mProductID.hashCode());
		return rs;
	}

	public boolean equals(Object obj) {
		if(this == obj)
			return true;
		if(obj == null || obj.getClass() != getClass())
			return false;

		MStoragePK other = (MStoragePK) obj;
		return ((mAttributeSetInstanceID == null && other.mAttributeSetInstanceID == null)
			|| (mAttributeSetInstanceID != null && mAttributeSetInstanceID.equals(other.mAttributeSetInstanceID)))
			&& ((mLocatorID == null && other.mLocatorID == null)
			|| (mLocatorID != null && mLocatorID.equals(other.mLocatorID)))
			&& ((mProductID == null && other.mProductID == null)
			|| (mProductID != null && mProductID.equals(other.mProductID)));
	}

	private void fromString(String str) {
		Tokenizer toke = new Tokenizer(str);
		str = toke.nextToken();
		if("null".equals(str))
			mAttributeSetInstanceID = null;
		else
			mAttributeSetInstanceID = new Integer(str);
		str = toke.nextToken();
		if("null".equals(str))
			mLocatorID = null;
		else
			mLocatorID = new Integer(str);
		str = toke.nextToken();
		if("null".equals(str))
			mProductID = null;
		else
			mProductID = new Integer(str);
	}

	protected static class Tokenizer {
		private final String str;
		private int last;

		public Tokenizer (String str) {
			this.str = str;
		}

		public String nextToken () {
			int next = str.indexOf("::", last);
			String part;
			if(next == -1) {
				part = str.substring(last);
				last = str.length();
			} else {
				part = str.substring(last, next);
				last = next + 2;
			}
			return part;
		}
	}
}