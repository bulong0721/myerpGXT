package org.adempiere.model;

import javax.persistence.*;

/**
 * Auto-generated by:
 * org.adempiere.AdempiereCustomizer
 */
@Entity
@Table(name="c_chargetype_doctype")
@IdClass(org.adempiere.model.CChargetypeDoctypePK.class)
public class CChargetypeDoctype extends org.adempiere.common.ADEntityBase {
	private static final long serialVersionUID = 1L;
	private Integer adClientId;
	private Integer adOrgId;
	private Integer cChargetypeId;
	private Integer cDoctypeId;
	private String created;
	private Integer createdby;
	private String isactive;
	private String isallownegative;
	private String isallowpositive;
	private String updated;
	private Integer updatedby;

	public CChargetypeDoctype() {
	}

	public CChargetypeDoctype(Integer cChargetypeId, Integer cDoctypeId) {
		this.cChargetypeId = cChargetypeId;
		this.cDoctypeId = cDoctypeId;
	}

	@Basic
	@Column(name="AD_CLIENT_ID", nullable=false)
	public Integer getAdClientId() {
		return adClientId;
	}

	public void setAdClientId(Integer adClientId) {
		this.adClientId = adClientId;
	}

	@Basic
	@Column(name="AD_ORG_ID", nullable=false)
	public Integer getAdOrgId() {
		return adOrgId;
	}

	public void setAdOrgId(Integer adOrgId) {
		this.adOrgId = adOrgId;
	}

	@Id
	@Column(name="C_CHARGETYPE_ID")
	public Integer getCChargetypeId() {
		return cChargetypeId;
	}

	public void setCChargetypeId(Integer cChargetypeId) {
		this.cChargetypeId = cChargetypeId;
	}

	@Id
	@Column(name="C_DOCTYPE_ID")
	public Integer getCDoctypeId() {
		return cDoctypeId;
	}

	public void setCDoctypeId(Integer cDoctypeId) {
		this.cDoctypeId = cDoctypeId;
	}

	@Basic
	@Column(columnDefinition="TIMESTAMP", nullable=false)
	public String getCreated() {
		return created;
	}

	public void setCreated(String created) {
		this.created = created;
	}

	@Basic
	@Column(nullable=false)
	public Integer getCreatedby() {
		return createdby;
	}

	public void setCreatedby(Integer createdby) {
		this.createdby = createdby;
	}

	@Basic
	@Column(nullable=false, length=1)
	public String getIsactive() {
		return isactive;
	}

	public void setIsactive(String isactive) {
		this.isactive = isactive;
	}

	@Basic
	@Column(nullable=false, length=1)
	public String getIsallownegative() {
		return isallownegative;
	}

	public void setIsallownegative(String isallownegative) {
		this.isallownegative = isallownegative;
	}

	@Basic
	@Column(nullable=false, length=1)
	public String getIsallowpositive() {
		return isallowpositive;
	}

	public void setIsallowpositive(String isallowpositive) {
		this.isallowpositive = isallowpositive;
	}

	@Basic
	@Column(columnDefinition="TIMESTAMP", nullable=false)
	public String getUpdated() {
		return updated;
	}

	public void setUpdated(String updated) {
		this.updated = updated;
	}

	@Basic
	@Column(nullable=false)
	public Integer getUpdatedby() {
		return updatedby;
	}

	public void setUpdatedby(Integer updatedby) {
		this.updatedby = updatedby;
	}
}