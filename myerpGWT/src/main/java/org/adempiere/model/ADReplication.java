package org.adempiere.model;

import java.math.*;
import javax.persistence.*;

/**
 * Auto-generated by:
 * org.adempiere.AdempiereCustomizer
 */
@Entity
@Table(name="ad_replication")
public class ADReplication extends org.adempiere.common.ADEntityBase {
	private static final long serialVersionUID = 1L;
	private Integer aDClientID;
	private Integer aDOrgID;
	private Integer aDReplicationID;
	private Integer aDReplicationStrategyID;
	private Boolean active;
	private String created;
	private Integer createdBy;
	private String dateLastRun;
	private String description;
	private String help;
	private String hostAddress;
	private Integer hostPort;
	private BigDecimal iDRangeEnd;
	private BigDecimal iDRangeStart;
	private String name;
	private String prefix;
	private Boolean processing;
	private Boolean rMIoverHTTP;
	private Integer remoteClientID;
	private Integer remoteOrgID;
	private String suffix;
	private String updated;
	private Integer updatedBy;

	public ADReplication() {
	}

	public ADReplication(Integer aDReplicationID) {
		this.aDReplicationID = aDReplicationID;
	}

	@Basic
	@Column(name="AD_CLIENT_ID", columnDefinition="INT", nullable=false)
	public Integer getADClientID() {
		return aDClientID;
	}

	public void setADClientID(Integer aDClientID) {
		this.aDClientID = aDClientID;
	}

	@Basic
	@Column(name="AD_ORG_ID", columnDefinition="INT", nullable=false)
	public Integer getADOrgID() {
		return aDOrgID;
	}

	public void setADOrgID(Integer aDOrgID) {
		this.aDOrgID = aDOrgID;
	}

	@Id
	@Column(name="AD_REPLICATION_ID", columnDefinition="INT")
	@TableGenerator(name = "PkGen_774", table = "ad_sequence", pkColumnName = "name", pkColumnValue = "AD_Replication", valueColumnName = "currentnextsys", allocationSize = 1 )
	@GeneratedValue(strategy = GenerationType.TABLE, generator = "PkGen_774")
	public Integer getADReplicationID() {
		return aDReplicationID;
	}

	public void setADReplicationID(Integer aDReplicationID) {
		this.aDReplicationID = aDReplicationID;
	}

	@Basic
	@Column(name="AD_REPLICATIONSTRATEGY_ID", columnDefinition="INT", nullable=false)
	public Integer getADReplicationStrategyID() {
		return aDReplicationStrategyID;
	}

	public void setADReplicationStrategyID(Integer aDReplicationStrategyID) {
		this.aDReplicationStrategyID = aDReplicationStrategyID;
	}

	@Basic
	@Column(name="ISACTIVE", nullable=false)
	public Boolean isActive() {
		return active;
	}

	public void setActive(Boolean active) {
		this.active = active;
	}

	@Basic
	@Column(columnDefinition="TIMESTAMP", nullable=false)
	public String getCreated() {
		return created;
	}

	public void setCreated(String created) {
		this.created = created;
	}

	@Basic
	@Column(columnDefinition="INT", nullable=false)
	public Integer getCreatedBy() {
		return createdBy;
	}

	public void setCreatedBy(Integer createdBy) {
		this.createdBy = createdBy;
	}

	@Basic
	public String getDateLastRun() {
		return dateLastRun;
	}

	public void setDateLastRun(String dateLastRun) {
		this.dateLastRun = dateLastRun;
	}

	@Basic
	public String getDescription() {
		return description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Basic
	@Column(length=2000)
	public String getHelp() {
		return help;
	}

	public void setHelp(String help) {
		this.help = help;
	}

	@Basic
	@Column(nullable=false, length=60)
	public String getHostAddress() {
		return hostAddress;
	}

	public void setHostAddress(String hostAddress) {
		this.hostAddress = hostAddress;
	}

	@Basic
	@Column(columnDefinition="INT", nullable=false)
	public Integer getHostPort() {
		return hostPort;
	}

	public void setHostPort(Integer hostPort) {
		this.hostPort = hostPort;
	}

	@Basic
	public BigDecimal getIDRangeEnd() {
		return iDRangeEnd;
	}

	public void setIDRangeEnd(BigDecimal iDRangeEnd) {
		this.iDRangeEnd = iDRangeEnd;
	}

	@Basic
	public BigDecimal getIDRangeStart() {
		return iDRangeStart;
	}

	public void setIDRangeStart(BigDecimal iDRangeStart) {
		this.iDRangeStart = iDRangeStart;
	}

	@Basic
	@Column(nullable=false, length=60)
	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Basic
	@Column(length=10)
	public String getPrefix() {
		return prefix;
	}

	public void setPrefix(String prefix) {
		this.prefix = prefix;
	}

	@Basic
	public Boolean isProcessing() {
		return processing;
	}

	public void setProcessing(Boolean processing) {
		this.processing = processing;
	}

	@Basic
	@Column(name="ISRMIOVERHTTP", nullable=false)
	public Boolean isRMIoverHTTP() {
		return rMIoverHTTP;
	}

	public void setRMIoverHTTP(Boolean rMIoverHTTP) {
		this.rMIoverHTTP = rMIoverHTTP;
	}

	@Basic
	@Column(name="REMOTE_CLIENT_ID", columnDefinition="INT")
	public Integer getRemoteClientID() {
		return remoteClientID;
	}

	public void setRemoteClientID(Integer remoteClientID) {
		this.remoteClientID = remoteClientID;
	}

	@Basic
	@Column(name="REMOTE_ORG_ID", columnDefinition="INT")
	public Integer getRemoteOrgID() {
		return remoteOrgID;
	}

	public void setRemoteOrgID(Integer remoteOrgID) {
		this.remoteOrgID = remoteOrgID;
	}

	@Basic
	@Column(length=10)
	public String getSuffix() {
		return suffix;
	}

	public void setSuffix(String suffix) {
		this.suffix = suffix;
	}

	@Basic
	@Column(columnDefinition="TIMESTAMP", nullable=false)
	public String getUpdated() {
		return updated;
	}

	public void setUpdated(String updated) {
		this.updated = updated;
	}

	@Basic
	@Column(columnDefinition="INT", nullable=false)
	public Integer getUpdatedBy() {
		return updatedBy;
	}

	public void setUpdatedBy(Integer updatedBy) {
		this.updatedBy = updatedBy;
	}
}