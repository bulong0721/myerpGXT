package org.adempiere.model;

import javax.persistence.*;

/**
 * Auto-generated by:
 * org.adempiere.AdempiereCustomizer
 */
@Entity
@Table(name="c_acctschema_gl")
public class CAcctSchemaGL extends org.adempiere.common.ADEntityBase {
	private static final long serialVersionUID = 1L;
	private Integer aDClientID;
	private Integer aDOrgID;
	private Boolean active;
	private Integer cAcctSchemaID;
	private Integer commitmentOffsetAcct;
	private Integer commitmentOffsetSalesAcct;
	private String created;
	private Integer createdBy;
	private Integer currencyBalancingAcct;
	private Integer incomeSummaryAcct;
	private Integer intercompanyDueFromAcct;
	private Integer intercompanyDueToAcct;
	private Integer pPVOffsetAcct;
	private Integer retainedEarningAcct;
	private Integer suspenseBalancingAcct;
	private Integer suspenseErrorAcct;
	private String updated;
	private Integer updatedBy;
	private Boolean useCurrencyBalancing;
	private Boolean useSuspenseBalancing;
	private Boolean useSuspenseError;

	public CAcctSchemaGL() {
	}

	public CAcctSchemaGL(Integer cAcctSchemaID) {
		this.cAcctSchemaID = cAcctSchemaID;
	}

	@Basic
	@Column(name="AD_CLIENT_ID", columnDefinition="INT", nullable=false)
	public Integer getADClientID() {
		return aDClientID;
	}

	public void setADClientID(Integer aDClientID) {
		this.aDClientID = aDClientID;
	}

	@Basic
	@Column(name="AD_ORG_ID", columnDefinition="INT", nullable=false)
	public Integer getADOrgID() {
		return aDOrgID;
	}

	public void setADOrgID(Integer aDOrgID) {
		this.aDOrgID = aDOrgID;
	}

	@Basic
	@Column(name="ISACTIVE", nullable=false)
	public Boolean isActive() {
		return active;
	}

	public void setActive(Boolean active) {
		this.active = active;
	}

	@Id
	@Column(name="C_ACCTSCHEMA_ID", columnDefinition="INT")
	public Integer getCAcctSchemaID() {
		return cAcctSchemaID;
	}

	public void setCAcctSchemaID(Integer cAcctSchemaID) {
		this.cAcctSchemaID = cAcctSchemaID;
	}

	@Basic
	@Column(name="COMMITMENTOFFSET_ACCT", columnDefinition="INT", nullable=false)
	public Integer getCommitmentOffsetAcct() {
		return commitmentOffsetAcct;
	}

	public void setCommitmentOffsetAcct(Integer commitmentOffsetAcct) {
		this.commitmentOffsetAcct = commitmentOffsetAcct;
	}

	@Basic
	@Column(name="COMMITMENTOFFSETSALES_ACCT", columnDefinition="INT", nullable=false)
	public Integer getCommitmentOffsetSalesAcct() {
		return commitmentOffsetSalesAcct;
	}

	public void setCommitmentOffsetSalesAcct(Integer commitmentOffsetSalesAcct) {
		this.commitmentOffsetSalesAcct = commitmentOffsetSalesAcct;
	}

	@Basic
	@Column(columnDefinition="TIMESTAMP", nullable=false)
	public String getCreated() {
		return created;
	}

	public void setCreated(String created) {
		this.created = created;
	}

	@Basic
	@Column(columnDefinition="INT", nullable=false)
	public Integer getCreatedBy() {
		return createdBy;
	}

	public void setCreatedBy(Integer createdBy) {
		this.createdBy = createdBy;
	}

	@Basic
	@Column(name="CURRENCYBALANCING_ACCT", columnDefinition="INT")
	public Integer getCurrencyBalancingAcct() {
		return currencyBalancingAcct;
	}

	public void setCurrencyBalancingAcct(Integer currencyBalancingAcct) {
		this.currencyBalancingAcct = currencyBalancingAcct;
	}

	@Basic
	@Column(name="INCOMESUMMARY_ACCT", columnDefinition="INT", nullable=false)
	public Integer getIncomeSummaryAcct() {
		return incomeSummaryAcct;
	}

	public void setIncomeSummaryAcct(Integer incomeSummaryAcct) {
		this.incomeSummaryAcct = incomeSummaryAcct;
	}

	@Basic
	@Column(name="INTERCOMPANYDUEFROM_ACCT", columnDefinition="INT", nullable=false)
	public Integer getIntercompanyDueFromAcct() {
		return intercompanyDueFromAcct;
	}

	public void setIntercompanyDueFromAcct(Integer intercompanyDueFromAcct) {
		this.intercompanyDueFromAcct = intercompanyDueFromAcct;
	}

	@Basic
	@Column(name="INTERCOMPANYDUETO_ACCT", columnDefinition="INT", nullable=false)
	public Integer getIntercompanyDueToAcct() {
		return intercompanyDueToAcct;
	}

	public void setIntercompanyDueToAcct(Integer intercompanyDueToAcct) {
		this.intercompanyDueToAcct = intercompanyDueToAcct;
	}

	@Basic
	@Column(name="PPVOFFSET_ACCT", columnDefinition="INT", nullable=false)
	public Integer getPPVOffsetAcct() {
		return pPVOffsetAcct;
	}

	public void setPPVOffsetAcct(Integer pPVOffsetAcct) {
		this.pPVOffsetAcct = pPVOffsetAcct;
	}

	@Basic
	@Column(name="RETAINEDEARNING_ACCT", columnDefinition="INT", nullable=false)
	public Integer getRetainedEarningAcct() {
		return retainedEarningAcct;
	}

	public void setRetainedEarningAcct(Integer retainedEarningAcct) {
		this.retainedEarningAcct = retainedEarningAcct;
	}

	@Basic
	@Column(name="SUSPENSEBALANCING_ACCT", columnDefinition="INT")
	public Integer getSuspenseBalancingAcct() {
		return suspenseBalancingAcct;
	}

	public void setSuspenseBalancingAcct(Integer suspenseBalancingAcct) {
		this.suspenseBalancingAcct = suspenseBalancingAcct;
	}

	@Basic
	@Column(name="SUSPENSEERROR_ACCT", columnDefinition="INT")
	public Integer getSuspenseErrorAcct() {
		return suspenseErrorAcct;
	}

	public void setSuspenseErrorAcct(Integer suspenseErrorAcct) {
		this.suspenseErrorAcct = suspenseErrorAcct;
	}

	@Basic
	@Column(columnDefinition="TIMESTAMP", nullable=false)
	public String getUpdated() {
		return updated;
	}

	public void setUpdated(String updated) {
		this.updated = updated;
	}

	@Basic
	@Column(columnDefinition="INT", nullable=false)
	public Integer getUpdatedBy() {
		return updatedBy;
	}

	public void setUpdatedBy(Integer updatedBy) {
		this.updatedBy = updatedBy;
	}

	@Basic
	@Column(nullable=false)
	public Boolean isUseCurrencyBalancing() {
		return useCurrencyBalancing;
	}

	public void setUseCurrencyBalancing(Boolean useCurrencyBalancing) {
		this.useCurrencyBalancing = useCurrencyBalancing;
	}

	@Basic
	@Column(nullable=false)
	public Boolean isUseSuspenseBalancing() {
		return useSuspenseBalancing;
	}

	public void setUseSuspenseBalancing(Boolean useSuspenseBalancing) {
		this.useSuspenseBalancing = useSuspenseBalancing;
	}

	@Basic
	@Column(nullable=false)
	public Boolean isUseSuspenseError() {
		return useSuspenseError;
	}

	public void setUseSuspenseError(Boolean useSuspenseError) {
		this.useSuspenseError = useSuspenseError;
	}
}