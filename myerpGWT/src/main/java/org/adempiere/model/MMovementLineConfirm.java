package org.adempiere.model;

import java.math.*;
import javax.persistence.*;

/**
 * Auto-generated by:
 * org.adempiere.AdempiereCustomizer
 */
@Entity
@Table(name="m_movementlineconfirm")
public class MMovementLineConfirm extends org.adempiere.common.ADEntityBase {
	private static final long serialVersionUID = 1L;
	private Integer aDClientID;
	private Integer aDOrgID;
	private Boolean active;
	private BigDecimal confirmedQty;
	private String created;
	private Integer createdBy;
	private String description;
	private BigDecimal differenceQty;
	private Integer mInventoryLineID;
	private Integer mMovementConfirmID;
	private Integer mMovementLineConfirmID;
	private Integer mMovementLineID;
	private Boolean processed;
	private BigDecimal scrappedQty;
	private BigDecimal targetQty;
	private String updated;
	private Integer updatedBy;

	public MMovementLineConfirm() {
	}

	public MMovementLineConfirm(Integer mMovementLineConfirmID) {
		this.mMovementLineConfirmID = mMovementLineConfirmID;
	}

	@Basic
	@Column(name="AD_CLIENT_ID", columnDefinition="INT", nullable=false)
	public Integer getADClientID() {
		return aDClientID;
	}

	public void setADClientID(Integer aDClientID) {
		this.aDClientID = aDClientID;
	}

	@Basic
	@Column(name="AD_ORG_ID", columnDefinition="INT", nullable=false)
	public Integer getADOrgID() {
		return aDOrgID;
	}

	public void setADOrgID(Integer aDOrgID) {
		this.aDOrgID = aDOrgID;
	}

	@Basic
	@Column(name="ISACTIVE", nullable=false)
	public Boolean isActive() {
		return active;
	}

	public void setActive(Boolean active) {
		this.active = active;
	}

	@Basic
	@Column(nullable=false)
	public BigDecimal getConfirmedQty() {
		return confirmedQty;
	}

	public void setConfirmedQty(BigDecimal confirmedQty) {
		this.confirmedQty = confirmedQty;
	}

	@Basic
	@Column(columnDefinition="TIMESTAMP", nullable=false)
	public String getCreated() {
		return created;
	}

	public void setCreated(String created) {
		this.created = created;
	}

	@Basic
	@Column(columnDefinition="INT", nullable=false)
	public Integer getCreatedBy() {
		return createdBy;
	}

	public void setCreatedBy(Integer createdBy) {
		this.createdBy = createdBy;
	}

	@Basic
	public String getDescription() {
		return description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Basic
	@Column(nullable=false)
	public BigDecimal getDifferenceQty() {
		return differenceQty;
	}

	public void setDifferenceQty(BigDecimal differenceQty) {
		this.differenceQty = differenceQty;
	}

	@Basic
	@Column(name="M_INVENTORYLINE_ID", columnDefinition="INT")
	public Integer getMInventoryLineID() {
		return mInventoryLineID;
	}

	public void setMInventoryLineID(Integer mInventoryLineID) {
		this.mInventoryLineID = mInventoryLineID;
	}

	@Basic
	@Column(name="M_MOVEMENTCONFIRM_ID", columnDefinition="INT", nullable=false)
	public Integer getMMovementConfirmID() {
		return mMovementConfirmID;
	}

	public void setMMovementConfirmID(Integer mMovementConfirmID) {
		this.mMovementConfirmID = mMovementConfirmID;
	}

	@Id
	@Column(name="M_MOVEMENTLINECONFIRM_ID", columnDefinition="INT")
	@TableGenerator(name = "PkGen_982", table = "ad_sequence", pkColumnName = "name", pkColumnValue = "M_MovementLineConfirm", valueColumnName = "currentnextsys", allocationSize = 1 )
	@GeneratedValue(strategy = GenerationType.TABLE, generator = "PkGen_982")
	public Integer getMMovementLineConfirmID() {
		return mMovementLineConfirmID;
	}

	public void setMMovementLineConfirmID(Integer mMovementLineConfirmID) {
		this.mMovementLineConfirmID = mMovementLineConfirmID;
	}

	@Basic
	@Column(name="M_MOVEMENTLINE_ID", columnDefinition="INT", nullable=false)
	public Integer getMMovementLineID() {
		return mMovementLineID;
	}

	public void setMMovementLineID(Integer mMovementLineID) {
		this.mMovementLineID = mMovementLineID;
	}

	@Basic
	@Column(nullable=false)
	public Boolean isProcessed() {
		return processed;
	}

	public void setProcessed(Boolean processed) {
		this.processed = processed;
	}

	@Basic
	@Column(nullable=false)
	public BigDecimal getScrappedQty() {
		return scrappedQty;
	}

	public void setScrappedQty(BigDecimal scrappedQty) {
		this.scrappedQty = scrappedQty;
	}

	@Basic
	@Column(nullable=false)
	public BigDecimal getTargetQty() {
		return targetQty;
	}

	public void setTargetQty(BigDecimal targetQty) {
		this.targetQty = targetQty;
	}

	@Basic
	@Column(columnDefinition="TIMESTAMP", nullable=false)
	public String getUpdated() {
		return updated;
	}

	public void setUpdated(String updated) {
		this.updated = updated;
	}

	@Basic
	@Column(columnDefinition="INT", nullable=false)
	public Integer getUpdatedBy() {
		return updatedBy;
	}

	public void setUpdatedBy(Integer updatedBy) {
		this.updatedBy = updatedBy;
	}
}