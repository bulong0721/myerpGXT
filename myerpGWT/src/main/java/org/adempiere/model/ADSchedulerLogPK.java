package org.adempiere.model;

import java.io.*;
import java.util.*;

/**
 * Application identity class for: org.adempiere.model.ADSchedulerLog
 *
 * Auto-generated by:
 * org.apache.openjpa.enhance.ApplicationIdTool
 */
public class ADSchedulerLogPK implements Serializable {
	static {
		// register persistent class in JVM
		try { Class.forName("org.adempiere.model.ADSchedulerLog"); }
		catch(Exception e) {}
	}

	public Integer aDSchedulerID;
	public Integer aDSchedulerLogID;

	public ADSchedulerLogPK() {
	}

	public ADSchedulerLogPK(String str) {
		fromString(str);
	}

	public Integer getADSchedulerID() {
		return aDSchedulerID;
	}

	public void setADSchedulerID(Integer aDSchedulerID) {
		this.aDSchedulerID = aDSchedulerID;
	}

	public Integer getADSchedulerLogID() {
		return aDSchedulerLogID;
	}

	public void setADSchedulerLogID(Integer aDSchedulerLogID) {
		this.aDSchedulerLogID = aDSchedulerLogID;
	}

	public String toString() {
		return String.valueOf(aDSchedulerID)
			+ "::" + String.valueOf(aDSchedulerLogID);
	}

	public int hashCode() {
		int rs = 17;
		rs = rs * 37 + ((aDSchedulerID == null) ? 0 : aDSchedulerID.hashCode());
		rs = rs * 37 + ((aDSchedulerLogID == null) ? 0 : aDSchedulerLogID.hashCode());
		return rs;
	}

	public boolean equals(Object obj) {
		if(this == obj)
			return true;
		if(obj == null || obj.getClass() != getClass())
			return false;

		ADSchedulerLogPK other = (ADSchedulerLogPK) obj;
		return ((aDSchedulerID == null && other.aDSchedulerID == null)
			|| (aDSchedulerID != null && aDSchedulerID.equals(other.aDSchedulerID)))
			&& ((aDSchedulerLogID == null && other.aDSchedulerLogID == null)
			|| (aDSchedulerLogID != null && aDSchedulerLogID.equals(other.aDSchedulerLogID)));
	}

	private void fromString(String str) {
		Tokenizer toke = new Tokenizer(str);
		str = toke.nextToken();
		if("null".equals(str))
			aDSchedulerID = null;
		else
			aDSchedulerID = new Integer(str);
		str = toke.nextToken();
		if("null".equals(str))
			aDSchedulerLogID = null;
		else
			aDSchedulerLogID = new Integer(str);
	}

	protected static class Tokenizer {
		private final String str;
		private int last;

		public Tokenizer (String str) {
			this.str = str;
		}

		public String nextToken () {
			int next = str.indexOf("::", last);
			String part;
			if(next == -1) {
				part = str.substring(last);
				last = str.length();
			} else {
				part = str.substring(last, next);
				last = next + 2;
			}
			return part;
		}
	}
}