package org.adempiere.model;

import java.math.*;
import javax.persistence.*;

/**
 * Auto-generated by:
 * org.adempiere.AdempiereCustomizer
 */
@Entity
@Table(name="ad_printpaper")
public class ADPrintPaper extends org.adempiere.common.ADEntityBase {
	private static final long serialVersionUID = 1L;
	private Integer aDClientID;
	private Integer aDOrgID;
	private Integer aDPrintPaperID;
	private Boolean active;
	private String code;
	private String created;
	private Integer createdBy;
	private String description;
	private String dimensionUnits;
	private Boolean isDefault;
	private Boolean landscape;
	private Integer marginBottom;
	private Integer marginLeft;
	private Integer marginRight;
	private Integer marginTop;
	private String name;
	private Boolean processing;
	private BigDecimal sizeX;
	private BigDecimal sizeY;
	private String updated;
	private Integer updatedBy;

	public ADPrintPaper() {
	}

	public ADPrintPaper(Integer aDPrintPaperID) {
		this.aDPrintPaperID = aDPrintPaperID;
	}

	@Basic
	@Column(name="AD_CLIENT_ID", columnDefinition="INT", nullable=false)
	public Integer getADClientID() {
		return aDClientID;
	}

	public void setADClientID(Integer aDClientID) {
		this.aDClientID = aDClientID;
	}

	@Basic
	@Column(name="AD_ORG_ID", columnDefinition="INT", nullable=false)
	public Integer getADOrgID() {
		return aDOrgID;
	}

	public void setADOrgID(Integer aDOrgID) {
		this.aDOrgID = aDOrgID;
	}

	@Id
	@Column(name="AD_PRINTPAPER_ID", columnDefinition="INT")
	@TableGenerator(name = "PkGen_578", table = "ad_sequence", pkColumnName = "name", pkColumnValue = "AD_PrintPaper", valueColumnName = "currentnextsys", allocationSize = 1 )
	@GeneratedValue(strategy = GenerationType.TABLE, generator = "PkGen_578")
	public Integer getADPrintPaperID() {
		return aDPrintPaperID;
	}

	public void setADPrintPaperID(Integer aDPrintPaperID) {
		this.aDPrintPaperID = aDPrintPaperID;
	}

	@Basic
	@Column(name="ISACTIVE", nullable=false)
	public Boolean isActive() {
		return active;
	}

	public void setActive(Boolean active) {
		this.active = active;
	}

	@Basic
	@Column(nullable=false, length=2000)
	public String getCode() {
		return code;
	}

	public void setCode(String code) {
		this.code = code;
	}

	@Basic
	@Column(columnDefinition="TIMESTAMP", nullable=false)
	public String getCreated() {
		return created;
	}

	public void setCreated(String created) {
		this.created = created;
	}

	@Basic
	@Column(columnDefinition="INT", nullable=false)
	public Integer getCreatedBy() {
		return createdBy;
	}

	public void setCreatedBy(Integer createdBy) {
		this.createdBy = createdBy;
	}

	@Basic
	public String getDescription() {
		return description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Basic
	@Column(length=1)
	public String getDimensionUnits() {
		return dimensionUnits;
	}

	public void setDimensionUnits(String dimensionUnits) {
		this.dimensionUnits = dimensionUnits;
	}

	@Basic
	@Column(nullable=false)
	public Boolean isIsDefault() {
		return isDefault;
	}

	public void setIsDefault(Boolean isDefault) {
		this.isDefault = isDefault;
	}

	@Basic
	@Column(name="ISLANDSCAPE", nullable=false)
	public Boolean isLandscape() {
		return landscape;
	}

	public void setLandscape(Boolean landscape) {
		this.landscape = landscape;
	}

	@Basic
	@Column(columnDefinition="INT", nullable=false)
	public Integer getMarginBottom() {
		return marginBottom;
	}

	public void setMarginBottom(Integer marginBottom) {
		this.marginBottom = marginBottom;
	}

	@Basic
	@Column(columnDefinition="INT", nullable=false)
	public Integer getMarginLeft() {
		return marginLeft;
	}

	public void setMarginLeft(Integer marginLeft) {
		this.marginLeft = marginLeft;
	}

	@Basic
	@Column(columnDefinition="INT", nullable=false)
	public Integer getMarginRight() {
		return marginRight;
	}

	public void setMarginRight(Integer marginRight) {
		this.marginRight = marginRight;
	}

	@Basic
	@Column(columnDefinition="INT", nullable=false)
	public Integer getMarginTop() {
		return marginTop;
	}

	public void setMarginTop(Integer marginTop) {
		this.marginTop = marginTop;
	}

	@Basic
	@Column(nullable=false, length=60)
	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Basic
	public Boolean isProcessing() {
		return processing;
	}

	public void setProcessing(Boolean processing) {
		this.processing = processing;
	}

	@Basic
	public BigDecimal getSizeX() {
		return sizeX;
	}

	public void setSizeX(BigDecimal sizeX) {
		this.sizeX = sizeX;
	}

	@Basic
	public BigDecimal getSizeY() {
		return sizeY;
	}

	public void setSizeY(BigDecimal sizeY) {
		this.sizeY = sizeY;
	}

	@Basic
	@Column(columnDefinition="TIMESTAMP", nullable=false)
	public String getUpdated() {
		return updated;
	}

	public void setUpdated(String updated) {
		this.updated = updated;
	}

	@Basic
	@Column(columnDefinition="INT", nullable=false)
	public Integer getUpdatedBy() {
		return updatedBy;
	}

	public void setUpdatedBy(Integer updatedBy) {
		this.updatedBy = updatedBy;
	}
}