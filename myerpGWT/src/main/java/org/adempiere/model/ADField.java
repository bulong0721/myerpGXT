package org.adempiere.model;

import javax.persistence.*;

/**
 * Auto-generated by:
 * org.adempiere.AdempiereCustomizer
 */
@Entity
@Table(name="ad_field")
public class ADField extends org.adempiere.common.ADEntityBase {
	private static final long serialVersionUID = 1L;
	private Integer aDClientID;
	private Integer aDColumnID;
	private Integer aDFieldGroupID;
	private Integer aDFieldID;
	private Integer aDOrgID;
	private Integer aDReferenceID;
	private Integer aDReferenceValueID;
	private Integer aDTabID;
	private Integer aDValRuleID;
	private Boolean active;
	private Boolean centrallyMaintained;
	private String created;
	private Integer createdBy;
	private String defaultValue;
	private String description;
	private Integer displayLength;
	private String displayLogic;
	private Boolean displayed;
	private Boolean encrypted;
	private String entityType;
	private Boolean fieldOnly;
	private Boolean heading;
	private String help;
	private Integer includedTabID;
	private String infoFactoryClass;
	private Boolean mandatory;
	private String name;
	private String obscureType;
	private Boolean readOnly;
	private Boolean sameLine;
	private Integer seqNo;
	private Integer sortNo;
	private String updated;
	private Integer updatedBy;

	public ADField() {
	}

	public ADField(Integer aDFieldID) {
		this.aDFieldID = aDFieldID;
	}

	@Basic
	@Column(name="AD_CLIENT_ID", columnDefinition="INT", nullable=false)
	public Integer getADClientID() {
		return aDClientID;
	}

	public void setADClientID(Integer aDClientID) {
		this.aDClientID = aDClientID;
	}

	@Basic
	@Column(name="AD_COLUMN_ID", columnDefinition="INT")
	public Integer getADColumnID() {
		return aDColumnID;
	}

	public void setADColumnID(Integer aDColumnID) {
		this.aDColumnID = aDColumnID;
	}

	@Basic
	@Column(name="AD_FIELDGROUP_ID", columnDefinition="INT")
	public Integer getADFieldGroupID() {
		return aDFieldGroupID;
	}

	public void setADFieldGroupID(Integer aDFieldGroupID) {
		this.aDFieldGroupID = aDFieldGroupID;
	}

	@Id
	@Column(name="AD_FIELD_ID", columnDefinition="INT")
	@TableGenerator(name = "PkGen_4", table = "ad_sequence", pkColumnName = "name", pkColumnValue = "AD_Field", valueColumnName = "currentnextsys", allocationSize = 1 )
	@GeneratedValue(strategy = GenerationType.TABLE, generator = "PkGen_4")
	public Integer getADFieldID() {
		return aDFieldID;
	}

	public void setADFieldID(Integer aDFieldID) {
		this.aDFieldID = aDFieldID;
	}

	@Basic
	@Column(name="AD_ORG_ID", columnDefinition="INT", nullable=false)
	public Integer getADOrgID() {
		return aDOrgID;
	}

	public void setADOrgID(Integer aDOrgID) {
		this.aDOrgID = aDOrgID;
	}

	@Basic
	@Column(name="AD_REFERENCE_ID", columnDefinition="INT")
	public Integer getADReferenceID() {
		return aDReferenceID;
	}

	public void setADReferenceID(Integer aDReferenceID) {
		this.aDReferenceID = aDReferenceID;
	}

	@Basic
	@Column(name="AD_REFERENCE_VALUE_ID", columnDefinition="INT")
	public Integer getADReferenceValueID() {
		return aDReferenceValueID;
	}

	public void setADReferenceValueID(Integer aDReferenceValueID) {
		this.aDReferenceValueID = aDReferenceValueID;
	}

	@Basic
	@Column(name="AD_TAB_ID", columnDefinition="INT", nullable=false)
	public Integer getADTabID() {
		return aDTabID;
	}

	public void setADTabID(Integer aDTabID) {
		this.aDTabID = aDTabID;
	}

	@Basic
	@Column(name="AD_VAL_RULE_ID", columnDefinition="INT")
	public Integer getADValRuleID() {
		return aDValRuleID;
	}

	public void setADValRuleID(Integer aDValRuleID) {
		this.aDValRuleID = aDValRuleID;
	}

	@Basic
	@Column(name="ISACTIVE", nullable=false)
	public Boolean isActive() {
		return active;
	}

	public void setActive(Boolean active) {
		this.active = active;
	}

	@Basic
	@Column(name="ISCENTRALLYMAINTAINED", nullable=false)
	public Boolean isCentrallyMaintained() {
		return centrallyMaintained;
	}

	public void setCentrallyMaintained(Boolean centrallyMaintained) {
		this.centrallyMaintained = centrallyMaintained;
	}

	@Basic
	@Column(columnDefinition="TIMESTAMP", nullable=false)
	public String getCreated() {
		return created;
	}

	public void setCreated(String created) {
		this.created = created;
	}

	@Basic
	@Column(columnDefinition="INT", nullable=false)
	public Integer getCreatedBy() {
		return createdBy;
	}

	public void setCreatedBy(Integer createdBy) {
		this.createdBy = createdBy;
	}

	@Basic
	@Column(length=2000)
	public String getDefaultValue() {
		return defaultValue;
	}

	public void setDefaultValue(String defaultValue) {
		this.defaultValue = defaultValue;
	}

	@Basic
	public String getDescription() {
		return description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Basic
	@Column(columnDefinition="INT")
	public Integer getDisplayLength() {
		return displayLength;
	}

	public void setDisplayLength(Integer displayLength) {
		this.displayLength = displayLength;
	}

	@Basic
	@Column(length=2000)
	public String getDisplayLogic() {
		return displayLogic;
	}

	public void setDisplayLogic(String displayLogic) {
		this.displayLogic = displayLogic;
	}

	@Basic
	@Column(name="ISDISPLAYED", nullable=false)
	public Boolean isDisplayed() {
		return displayed;
	}

	public void setDisplayed(Boolean displayed) {
		this.displayed = displayed;
	}

	@Basic
	@Column(name="ISENCRYPTED", nullable=false)
	public Boolean isEncrypted() {
		return encrypted;
	}

	public void setEncrypted(Boolean encrypted) {
		this.encrypted = encrypted;
	}

	@Basic
	@Column(nullable=false, length=40)
	public String getEntityType() {
		return entityType;
	}

	public void setEntityType(String entityType) {
		this.entityType = entityType;
	}

	@Basic
	@Column(name="ISFIELDONLY", nullable=false)
	public Boolean isFieldOnly() {
		return fieldOnly;
	}

	public void setFieldOnly(Boolean fieldOnly) {
		this.fieldOnly = fieldOnly;
	}

	@Basic
	@Column(name="ISHEADING", nullable=false)
	public Boolean isHeading() {
		return heading;
	}

	public void setHeading(Boolean heading) {
		this.heading = heading;
	}

	@Basic
	@Column(length=2000)
	public String getHelp() {
		return help;
	}

	public void setHelp(String help) {
		this.help = help;
	}

	@Basic
	@Column(name="INCLUDED_TAB_ID", columnDefinition="INT")
	public Integer getIncludedTabID() {
		return includedTabID;
	}

	public void setIncludedTabID(Integer includedTabID) {
		this.includedTabID = includedTabID;
	}

	@Basic
	public String getInfoFactoryClass() {
		return infoFactoryClass;
	}

	public void setInfoFactoryClass(String infoFactoryClass) {
		this.infoFactoryClass = infoFactoryClass;
	}

	@Basic
	@Column(name="ISMANDATORY")
	public Boolean isMandatory() {
		return mandatory;
	}

	public void setMandatory(Boolean mandatory) {
		this.mandatory = mandatory;
	}

	@Basic
	@Column(nullable=false, length=60)
	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Basic
	@Column(length=3)
	public String getObscureType() {
		return obscureType;
	}

	public void setObscureType(String obscureType) {
		this.obscureType = obscureType;
	}

	@Basic
	@Column(name="ISREADONLY", nullable=false)
	public Boolean isReadOnly() {
		return readOnly;
	}

	public void setReadOnly(Boolean readOnly) {
		this.readOnly = readOnly;
	}

	@Basic
	@Column(name="ISSAMELINE", nullable=false)
	public Boolean isSameLine() {
		return sameLine;
	}

	public void setSameLine(Boolean sameLine) {
		this.sameLine = sameLine;
	}

	@Basic
	@Column(columnDefinition="INT")
	public Integer getSeqNo() {
		return seqNo;
	}

	public void setSeqNo(Integer seqNo) {
		this.seqNo = seqNo;
	}

	@Basic
	@Column(columnDefinition="INT")
	public Integer getSortNo() {
		return sortNo;
	}

	public void setSortNo(Integer sortNo) {
		this.sortNo = sortNo;
	}

	@Basic
	@Column(columnDefinition="TIMESTAMP", nullable=false)
	public String getUpdated() {
		return updated;
	}

	public void setUpdated(String updated) {
		this.updated = updated;
	}

	@Basic
	@Column(columnDefinition="INT", nullable=false)
	public Integer getUpdatedBy() {
		return updatedBy;
	}

	public void setUpdatedBy(Integer updatedBy) {
		this.updatedBy = updatedBy;
	}
}