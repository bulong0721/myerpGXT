package org.adempiere.model;

import java.math.*;
import javax.persistence.*;

/**
 * Auto-generated by:
 * org.adempiere.AdempiereCustomizer
 */
@Entity
@Table(name="ad_color")
public class ADColor extends org.adempiere.common.ADEntityBase {
	private static final long serialVersionUID = 1L;
	private Integer aDClientID;
	private Integer aDColorID;
	private Integer aDImageID;
	private Integer aDOrgID;
	private Boolean active;
	private Integer alpha;
	private Integer alpha1;
	private Integer blue;
	private Integer blue1;
	private String colorType;
	private String created;
	private Integer createdBy;
	private Integer green;
	private Integer green1;
	private BigDecimal imageAlpha;
	private Boolean isDefault;
	private Integer lineDistance;
	private Integer lineWidth;
	private String name;
	private Integer red;
	private Integer red1;
	private Integer repeatDistance;
	private Integer startPoint;
	private String updated;
	private Integer updatedBy;

	public ADColor() {
	}

	public ADColor(Integer aDColorID) {
		this.aDColorID = aDColorID;
	}

	@Basic
	@Column(name="AD_CLIENT_ID", columnDefinition="INT", nullable=false)
	public Integer getADClientID() {
		return aDClientID;
	}

	public void setADClientID(Integer aDClientID) {
		this.aDClientID = aDClientID;
	}

	@Id
	@Column(name="AD_COLOR_ID", columnDefinition="INT")
	@TableGenerator(name = "PkGen_533", table = "ad_sequence", pkColumnName = "name", pkColumnValue = "AD_Color", valueColumnName = "currentnextsys", allocationSize = 1 )
	@GeneratedValue(strategy = GenerationType.TABLE, generator = "PkGen_533")
	public Integer getADColorID() {
		return aDColorID;
	}

	public void setADColorID(Integer aDColorID) {
		this.aDColorID = aDColorID;
	}

	@Basic
	@Column(name="AD_IMAGE_ID", columnDefinition="INT")
	public Integer getADImageID() {
		return aDImageID;
	}

	public void setADImageID(Integer aDImageID) {
		this.aDImageID = aDImageID;
	}

	@Basic
	@Column(name="AD_ORG_ID", columnDefinition="INT", nullable=false)
	public Integer getADOrgID() {
		return aDOrgID;
	}

	public void setADOrgID(Integer aDOrgID) {
		this.aDOrgID = aDOrgID;
	}

	@Basic
	@Column(name="ISACTIVE", nullable=false)
	public Boolean isActive() {
		return active;
	}

	public void setActive(Boolean active) {
		this.active = active;
	}

	@Basic
	@Column(columnDefinition="INT", nullable=false)
	public Integer getAlpha() {
		return alpha;
	}

	public void setAlpha(Integer alpha) {
		this.alpha = alpha;
	}

	@Basic
	@Column(name="ALPHA_1", columnDefinition="INT")
	public Integer getAlpha1() {
		return alpha1;
	}

	public void setAlpha1(Integer alpha1) {
		this.alpha1 = alpha1;
	}

	@Basic
	@Column(columnDefinition="INT", nullable=false)
	public Integer getBlue() {
		return blue;
	}

	public void setBlue(Integer blue) {
		this.blue = blue;
	}

	@Basic
	@Column(name="BLUE_1", columnDefinition="INT")
	public Integer getBlue1() {
		return blue1;
	}

	public void setBlue1(Integer blue1) {
		this.blue1 = blue1;
	}

	@Basic
	@Column(nullable=false, length=1)
	public String getColorType() {
		return colorType;
	}

	public void setColorType(String colorType) {
		this.colorType = colorType;
	}

	@Basic
	@Column(columnDefinition="TIMESTAMP", nullable=false)
	public String getCreated() {
		return created;
	}

	public void setCreated(String created) {
		this.created = created;
	}

	@Basic
	@Column(columnDefinition="INT", nullable=false)
	public Integer getCreatedBy() {
		return createdBy;
	}

	public void setCreatedBy(Integer createdBy) {
		this.createdBy = createdBy;
	}

	@Basic
	@Column(columnDefinition="INT", nullable=false)
	public Integer getGreen() {
		return green;
	}

	public void setGreen(Integer green) {
		this.green = green;
	}

	@Basic
	@Column(name="GREEN_1", columnDefinition="INT")
	public Integer getGreen1() {
		return green1;
	}

	public void setGreen1(Integer green1) {
		this.green1 = green1;
	}

	@Basic
	@Column(nullable=false)
	public BigDecimal getImageAlpha() {
		return imageAlpha;
	}

	public void setImageAlpha(BigDecimal imageAlpha) {
		this.imageAlpha = imageAlpha;
	}

	@Basic
	@Column(nullable=false)
	public Boolean isIsDefault() {
		return isDefault;
	}

	public void setIsDefault(Boolean isDefault) {
		this.isDefault = isDefault;
	}

	@Basic
	@Column(columnDefinition="INT")
	public Integer getLineDistance() {
		return lineDistance;
	}

	public void setLineDistance(Integer lineDistance) {
		this.lineDistance = lineDistance;
	}

	@Basic
	@Column(columnDefinition="INT")
	public Integer getLineWidth() {
		return lineWidth;
	}

	public void setLineWidth(Integer lineWidth) {
		this.lineWidth = lineWidth;
	}

	@Basic
	@Column(nullable=false, length=60)
	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Basic
	@Column(columnDefinition="INT", nullable=false)
	public Integer getRed() {
		return red;
	}

	public void setRed(Integer red) {
		this.red = red;
	}

	@Basic
	@Column(name="RED_1", columnDefinition="INT")
	public Integer getRed1() {
		return red1;
	}

	public void setRed1(Integer red1) {
		this.red1 = red1;
	}

	@Basic
	@Column(columnDefinition="INT")
	public Integer getRepeatDistance() {
		return repeatDistance;
	}

	public void setRepeatDistance(Integer repeatDistance) {
		this.repeatDistance = repeatDistance;
	}

	@Basic
	@Column(columnDefinition="INT")
	public Integer getStartPoint() {
		return startPoint;
	}

	public void setStartPoint(Integer startPoint) {
		this.startPoint = startPoint;
	}

	@Basic
	@Column(columnDefinition="TIMESTAMP", nullable=false)
	public String getUpdated() {
		return updated;
	}

	public void setUpdated(String updated) {
		this.updated = updated;
	}

	@Basic
	@Column(columnDefinition="INT", nullable=false)
	public Integer getUpdatedBy() {
		return updatedBy;
	}

	public void setUpdatedBy(Integer updatedBy) {
		this.updatedBy = updatedBy;
	}
}