package org.adempiere.model;

import java.io.*;
import java.util.*;

/**
 * Application identity class for: org.adempiere.model.ADRegistration
 *
 * Auto-generated by:
 * org.apache.openjpa.enhance.ApplicationIdTool
 */
public class ADRegistrationPK implements Serializable {
	static {
		// register persistent class in JVM
		try { Class.forName("org.adempiere.model.ADRegistration"); }
		catch(Exception e) {}
	}

	public Integer aDClientID;
	public Integer aDRegistrationID;
	public Integer aDSystemID;

	public ADRegistrationPK() {
	}

	public ADRegistrationPK(String str) {
		fromString(str);
	}

	public Integer getADClientID() {
		return aDClientID;
	}

	public void setADClientID(Integer aDClientID) {
		this.aDClientID = aDClientID;
	}

	public Integer getADRegistrationID() {
		return aDRegistrationID;
	}

	public void setADRegistrationID(Integer aDRegistrationID) {
		this.aDRegistrationID = aDRegistrationID;
	}

	public Integer getADSystemID() {
		return aDSystemID;
	}

	public void setADSystemID(Integer aDSystemID) {
		this.aDSystemID = aDSystemID;
	}

	public String toString() {
		return String.valueOf(aDClientID)
			+ "::" + String.valueOf(aDRegistrationID)
			+ "::" + String.valueOf(aDSystemID);
	}

	public int hashCode() {
		int rs = 17;
		rs = rs * 37 + ((aDClientID == null) ? 0 : aDClientID.hashCode());
		rs = rs * 37 + ((aDRegistrationID == null) ? 0 : aDRegistrationID.hashCode());
		rs = rs * 37 + ((aDSystemID == null) ? 0 : aDSystemID.hashCode());
		return rs;
	}

	public boolean equals(Object obj) {
		if(this == obj)
			return true;
		if(obj == null || obj.getClass() != getClass())
			return false;

		ADRegistrationPK other = (ADRegistrationPK) obj;
		return ((aDClientID == null && other.aDClientID == null)
			|| (aDClientID != null && aDClientID.equals(other.aDClientID)))
			&& ((aDRegistrationID == null && other.aDRegistrationID == null)
			|| (aDRegistrationID != null && aDRegistrationID.equals(other.aDRegistrationID)))
			&& ((aDSystemID == null && other.aDSystemID == null)
			|| (aDSystemID != null && aDSystemID.equals(other.aDSystemID)));
	}

	private void fromString(String str) {
		Tokenizer toke = new Tokenizer(str);
		str = toke.nextToken();
		if("null".equals(str))
			aDClientID = null;
		else
			aDClientID = new Integer(str);
		str = toke.nextToken();
		if("null".equals(str))
			aDRegistrationID = null;
		else
			aDRegistrationID = new Integer(str);
		str = toke.nextToken();
		if("null".equals(str))
			aDSystemID = null;
		else
			aDSystemID = new Integer(str);
	}

	protected static class Tokenizer {
		private final String str;
		private int last;

		public Tokenizer (String str) {
			this.str = str;
		}

		public String nextToken () {
			int next = str.indexOf("::", last);
			String part;
			if(next == -1) {
				part = str.substring(last);
				last = str.length();
			} else {
				part = str.substring(last, next);
				last = next + 2;
			}
			return part;
		}
	}
}