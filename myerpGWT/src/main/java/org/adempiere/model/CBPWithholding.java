package org.adempiere.model;

import javax.persistence.*;

/**
 * Auto-generated by:
 * org.adempiere.AdempiereCustomizer
 */
@Entity
@Table(name="c_bp_withholding")
@IdClass(org.adempiere.model.CBPWithholdingPK.class)
public class CBPWithholding extends org.adempiere.common.ADEntityBase {
	private static final long serialVersionUID = 1L;
	private Integer aDClientID;
	private Integer aDOrgID;
	private Boolean active;
	private Integer cBPartnerID;
	private Integer cWithholdingID;
	private String created;
	private Integer createdBy;
	private String exemptReason;
	private Boolean mandatoryWithholding;
	private Boolean temporaryExempt;
	private String updated;
	private Integer updatedBy;

	public CBPWithholding() {
	}

	public CBPWithholding(Integer cBPartnerID, Integer cWithholdingID) {
		this.cBPartnerID = cBPartnerID;
		this.cWithholdingID = cWithholdingID;
	}

	@Basic
	@Column(name="AD_CLIENT_ID", columnDefinition="INT", nullable=false)
	public Integer getADClientID() {
		return aDClientID;
	}

	public void setADClientID(Integer aDClientID) {
		this.aDClientID = aDClientID;
	}

	@Basic
	@Column(name="AD_ORG_ID", columnDefinition="INT", nullable=false)
	public Integer getADOrgID() {
		return aDOrgID;
	}

	public void setADOrgID(Integer aDOrgID) {
		this.aDOrgID = aDOrgID;
	}

	@Basic
	@Column(name="ISACTIVE", nullable=false)
	public Boolean isActive() {
		return active;
	}

	public void setActive(Boolean active) {
		this.active = active;
	}

	@Id
	@Column(name="C_BPARTNER_ID", columnDefinition="INT")
	public Integer getCBPartnerID() {
		return cBPartnerID;
	}

	public void setCBPartnerID(Integer cBPartnerID) {
		this.cBPartnerID = cBPartnerID;
	}

	@Id
	@Column(name="C_WITHHOLDING_ID", columnDefinition="INT")
	public Integer getCWithholdingID() {
		return cWithholdingID;
	}

	public void setCWithholdingID(Integer cWithholdingID) {
		this.cWithholdingID = cWithholdingID;
	}

	@Basic
	@Column(columnDefinition="TIMESTAMP", nullable=false)
	public String getCreated() {
		return created;
	}

	public void setCreated(String created) {
		this.created = created;
	}

	@Basic
	@Column(columnDefinition="INT", nullable=false)
	public Integer getCreatedBy() {
		return createdBy;
	}

	public void setCreatedBy(Integer createdBy) {
		this.createdBy = createdBy;
	}

	@Basic
	@Column(length=20)
	public String getExemptReason() {
		return exemptReason;
	}

	public void setExemptReason(String exemptReason) {
		this.exemptReason = exemptReason;
	}

	@Basic
	@Column(name="ISMANDATORYWITHHOLDING", nullable=false)
	public Boolean isMandatoryWithholding() {
		return mandatoryWithholding;
	}

	public void setMandatoryWithholding(Boolean mandatoryWithholding) {
		this.mandatoryWithholding = mandatoryWithholding;
	}

	@Basic
	@Column(name="ISTEMPORARYEXEMPT", nullable=false)
	public Boolean isTemporaryExempt() {
		return temporaryExempt;
	}

	public void setTemporaryExempt(Boolean temporaryExempt) {
		this.temporaryExempt = temporaryExempt;
	}

	@Basic
	@Column(columnDefinition="TIMESTAMP", nullable=false)
	public String getUpdated() {
		return updated;
	}

	public void setUpdated(String updated) {
		this.updated = updated;
	}

	@Basic
	@Column(columnDefinition="INT", nullable=false)
	public Integer getUpdatedBy() {
		return updatedBy;
	}

	public void setUpdatedBy(Integer updatedBy) {
		this.updatedBy = updatedBy;
	}
}