package org.adempiere.model;

import javax.persistence.*;

/**
 * Auto-generated by:
 * org.adempiere.AdempiereCustomizer
 */
@Entity
@Table(name="m_pricelist")
public class MPriceList extends org.adempiere.common.ADEntityBase {
	private static final long serialVersionUID = 1L;
	private Integer aDClientID;
	private Integer aDOrgID;
	private Boolean active;
	private Integer basePriceListID;
	private Integer cCurrencyID;
	private String created;
	private Integer createdBy;
	private String description;
	private Boolean enforcePriceLimit;
	private Boolean isDefault;
	private Integer mPriceListID;
	private String mandatory;
	private String name;
	private String presentForProduct;
	private Integer pricePrecision;
	private Boolean sOPriceList;
	private Boolean taxIncluded;
	private String updated;
	private Integer updatedBy;

	public MPriceList() {
	}

	public MPriceList(Integer mPriceListID) {
		this.mPriceListID = mPriceListID;
	}

	@Basic
	@Column(name="AD_CLIENT_ID", columnDefinition="INT", nullable=false)
	public Integer getADClientID() {
		return aDClientID;
	}

	public void setADClientID(Integer aDClientID) {
		this.aDClientID = aDClientID;
	}

	@Basic
	@Column(name="AD_ORG_ID", columnDefinition="INT", nullable=false)
	public Integer getADOrgID() {
		return aDOrgID;
	}

	public void setADOrgID(Integer aDOrgID) {
		this.aDOrgID = aDOrgID;
	}

	@Basic
	@Column(name="ISACTIVE", nullable=false)
	public Boolean isActive() {
		return active;
	}

	public void setActive(Boolean active) {
		this.active = active;
	}

	@Basic
	@Column(name="BASEPRICELIST_ID", columnDefinition="INT")
	public Integer getBasePriceListID() {
		return basePriceListID;
	}

	public void setBasePriceListID(Integer basePriceListID) {
		this.basePriceListID = basePriceListID;
	}

	@Basic
	@Column(name="C_CURRENCY_ID", columnDefinition="INT", nullable=false)
	public Integer getCCurrencyID() {
		return cCurrencyID;
	}

	public void setCCurrencyID(Integer cCurrencyID) {
		this.cCurrencyID = cCurrencyID;
	}

	@Basic
	@Column(columnDefinition="TIMESTAMP", nullable=false)
	public String getCreated() {
		return created;
	}

	public void setCreated(String created) {
		this.created = created;
	}

	@Basic
	@Column(columnDefinition="INT", nullable=false)
	public Integer getCreatedBy() {
		return createdBy;
	}

	public void setCreatedBy(Integer createdBy) {
		this.createdBy = createdBy;
	}

	@Basic
	public String getDescription() {
		return description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Basic
	@Column(nullable=false)
	public Boolean isEnforcePriceLimit() {
		return enforcePriceLimit;
	}

	public void setEnforcePriceLimit(Boolean enforcePriceLimit) {
		this.enforcePriceLimit = enforcePriceLimit;
	}

	@Basic
	@Column(nullable=false)
	public Boolean isIsDefault() {
		return isDefault;
	}

	public void setIsDefault(Boolean isDefault) {
		this.isDefault = isDefault;
	}

	@Id
	@Column(name="M_PRICELIST_ID", columnDefinition="INT")
	@TableGenerator(name = "PkGen_168", table = "ad_sequence", pkColumnName = "name", pkColumnValue = "M_PriceList", valueColumnName = "currentnextsys", allocationSize = 1 )
	@GeneratedValue(strategy = GenerationType.TABLE, generator = "PkGen_168")
	public Integer getMPriceListID() {
		return mPriceListID;
	}

	public void setMPriceListID(Integer mPriceListID) {
		this.mPriceListID = mPriceListID;
	}

	@Basic
	@Column(name="ISMANDATORY", length=1)
	public String getMandatory() {
		return mandatory;
	}

	public void setMandatory(String mandatory) {
		this.mandatory = mandatory;
	}

	@Basic
	@Column(nullable=false, length=60)
	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Basic
	@Column(name="ISPRESENTFORPRODUCT", length=1)
	public String getPresentForProduct() {
		return presentForProduct;
	}

	public void setPresentForProduct(String presentForProduct) {
		this.presentForProduct = presentForProduct;
	}

	@Basic
	@Column(columnDefinition="INT", nullable=false)
	public Integer getPricePrecision() {
		return pricePrecision;
	}

	public void setPricePrecision(Integer pricePrecision) {
		this.pricePrecision = pricePrecision;
	}

	@Basic
	@Column(name="ISSOPRICELIST", nullable=false)
	public Boolean isSOPriceList() {
		return sOPriceList;
	}

	public void setSOPriceList(Boolean sOPriceList) {
		this.sOPriceList = sOPriceList;
	}

	@Basic
	@Column(name="ISTAXINCLUDED", nullable=false)
	public Boolean isTaxIncluded() {
		return taxIncluded;
	}

	public void setTaxIncluded(Boolean taxIncluded) {
		this.taxIncluded = taxIncluded;
	}

	@Basic
	@Column(columnDefinition="TIMESTAMP", nullable=false)
	public String getUpdated() {
		return updated;
	}

	public void setUpdated(String updated) {
		this.updated = updated;
	}

	@Basic
	@Column(columnDefinition="INT", nullable=false)
	public Integer getUpdatedBy() {
		return updatedBy;
	}

	public void setUpdatedBy(Integer updatedBy) {
		this.updatedBy = updatedBy;
	}
}