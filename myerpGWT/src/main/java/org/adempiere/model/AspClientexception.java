package org.adempiere.model;

import javax.persistence.*;

/**
 * Auto-generated by:
 * org.adempiere.AdempiereCustomizer
 */
@Entity
@Table(name="asp_clientexception")
public class AspClientexception extends org.adempiere.common.ADEntityBase {
	private static final long serialVersionUID = 1L;
	private Integer adClientId;
	private Integer adFieldId;
	private Integer adFormId;
	private Integer adOrgId;
	private Integer adProcessId;
	private Integer adProcessParaId;
	private Integer adTabId;
	private Integer adTaskId;
	private Integer adWfNodeId;
	private Integer adWindowId;
	private Integer adWorkflowId;
	private Integer aspClientexceptionId;
	private String aspStatus;
	private String created;
	private Integer createdby;
	private Boolean isactive;
	private String updated;
	private Integer updatedby;

	public AspClientexception() {
	}

	public AspClientexception(Integer aspClientexceptionId) {
		this.aspClientexceptionId = aspClientexceptionId;
	}

	@Basic
	@Column(name="AD_CLIENT_ID", columnDefinition="INT", nullable=false)
	public Integer getAdClientId() {
		return adClientId;
	}

	public void setAdClientId(Integer adClientId) {
		this.adClientId = adClientId;
	}

	@Basic
	@Column(name="AD_FIELD_ID", columnDefinition="INT")
	public Integer getAdFieldId() {
		return adFieldId;
	}

	public void setAdFieldId(Integer adFieldId) {
		this.adFieldId = adFieldId;
	}

	@Basic
	@Column(name="AD_FORM_ID", columnDefinition="INT")
	public Integer getAdFormId() {
		return adFormId;
	}

	public void setAdFormId(Integer adFormId) {
		this.adFormId = adFormId;
	}

	@Basic
	@Column(name="AD_ORG_ID", columnDefinition="INT", nullable=false)
	public Integer getAdOrgId() {
		return adOrgId;
	}

	public void setAdOrgId(Integer adOrgId) {
		this.adOrgId = adOrgId;
	}

	@Basic
	@Column(name="AD_PROCESS_ID", columnDefinition="INT")
	public Integer getAdProcessId() {
		return adProcessId;
	}

	public void setAdProcessId(Integer adProcessId) {
		this.adProcessId = adProcessId;
	}

	@Basic
	@Column(name="AD_PROCESS_PARA_ID", columnDefinition="INT")
	public Integer getAdProcessParaId() {
		return adProcessParaId;
	}

	public void setAdProcessParaId(Integer adProcessParaId) {
		this.adProcessParaId = adProcessParaId;
	}

	@Basic
	@Column(name="AD_TAB_ID", columnDefinition="INT")
	public Integer getAdTabId() {
		return adTabId;
	}

	public void setAdTabId(Integer adTabId) {
		this.adTabId = adTabId;
	}

	@Basic
	@Column(name="AD_TASK_ID", columnDefinition="INT")
	public Integer getAdTaskId() {
		return adTaskId;
	}

	public void setAdTaskId(Integer adTaskId) {
		this.adTaskId = adTaskId;
	}

	@Basic
	@Column(name="AD_WF_NODE_ID", columnDefinition="INT")
	public Integer getAdWfNodeId() {
		return adWfNodeId;
	}

	public void setAdWfNodeId(Integer adWfNodeId) {
		this.adWfNodeId = adWfNodeId;
	}

	@Basic
	@Column(name="AD_WINDOW_ID", columnDefinition="INT")
	public Integer getAdWindowId() {
		return adWindowId;
	}

	public void setAdWindowId(Integer adWindowId) {
		this.adWindowId = adWindowId;
	}

	@Basic
	@Column(name="AD_WORKFLOW_ID", columnDefinition="INT")
	public Integer getAdWorkflowId() {
		return adWorkflowId;
	}

	public void setAdWorkflowId(Integer adWorkflowId) {
		this.adWorkflowId = adWorkflowId;
	}

	@Id
	@Column(name="ASP_CLIENTEXCEPTION_ID", columnDefinition="INT")
	@TableGenerator(name = "PkGen_53074", table = "ad_sequence", pkColumnName = "name", pkColumnValue = "ASP_ClientException", valueColumnName = "currentnextsys", allocationSize = 1 )
	@GeneratedValue(strategy = GenerationType.TABLE, generator = "PkGen_53074")
	public Integer getAspClientexceptionId() {
		return aspClientexceptionId;
	}

	public void setAspClientexceptionId(Integer aspClientexceptionId) {
		this.aspClientexceptionId = aspClientexceptionId;
	}

	@Basic
	@Column(name="ASP_STATUS", nullable=false, length=1)
	public String getAspStatus() {
		return aspStatus;
	}

	public void setAspStatus(String aspStatus) {
		this.aspStatus = aspStatus;
	}

	@Basic
	@Column(columnDefinition="TIMESTAMP", nullable=false)
	public String getCreated() {
		return created;
	}

	public void setCreated(String created) {
		this.created = created;
	}

	@Basic
	@Column(columnDefinition="INT", nullable=false)
	public Integer getCreatedby() {
		return createdby;
	}

	public void setCreatedby(Integer createdby) {
		this.createdby = createdby;
	}

	@Basic
	@Column(nullable=false)
	public Boolean isIsactive() {
		return isactive;
	}

	public void setIsactive(Boolean isactive) {
		this.isactive = isactive;
	}

	@Basic
	@Column(columnDefinition="TIMESTAMP", nullable=false)
	public String getUpdated() {
		return updated;
	}

	public void setUpdated(String updated) {
		this.updated = updated;
	}

	@Basic
	@Column(columnDefinition="INT", nullable=false)
	public Integer getUpdatedby() {
		return updatedby;
	}

	public void setUpdatedby(Integer updatedby) {
		this.updatedby = updatedby;
	}
}