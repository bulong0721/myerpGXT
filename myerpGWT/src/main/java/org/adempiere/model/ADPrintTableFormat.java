package org.adempiere.model;

import java.math.*;
import javax.persistence.*;

/**
 * Auto-generated by:
 * org.adempiere.AdempiereCustomizer
 */
@Entity
@Table(name="ad_printtableformat")
public class ADPrintTableFormat extends org.adempiere.common.ADEntityBase {
	private static final long serialVersionUID = 1L;
	private Integer aDClientID;
	private Integer aDImageID;
	private Integer aDOrgID;
	private Integer aDPrintTableFormatID;
	private Boolean active;
	private String created;
	private Integer createdBy;
	private String description;
	private String footerCenter;
	private String footerLeft;
	private String footerRight;
	private Integer functBGPrintColorID;
	private Integer functFGPrintColorID;
	private Integer functPrintFontID;
	private Integer hdrLinePrintColorID;
	private Integer hdrPrintFontID;
	private BigDecimal hdrStroke;
	private String hdrStrokeType;
	private Integer hdrTextBGPrintColorID;
	private Integer hdrTextFGPrintColorID;
	private String headerCenter;
	private String headerLeft;
	private String headerRight;
	private Boolean imageIsAttached;
	private String imageURL;
	private Boolean isDefault;
	private Integer linePrintColorID;
	private BigDecimal lineStroke;
	private String lineStrokeType;
	private Boolean multiLineHeader;
	private String name;
	private Boolean paintBoundaryLines;
	private Boolean paintHLines;
	private Boolean paintHeaderLines;
	private Boolean paintVLines;
	private Boolean printFunctionSymbols;
	private String updated;
	private Integer updatedBy;

	public ADPrintTableFormat() {
	}

	public ADPrintTableFormat(Integer aDPrintTableFormatID) {
		this.aDPrintTableFormatID = aDPrintTableFormatID;
	}

	@Basic
	@Column(name="AD_CLIENT_ID", columnDefinition="INT", nullable=false)
	public Integer getADClientID() {
		return aDClientID;
	}

	public void setADClientID(Integer aDClientID) {
		this.aDClientID = aDClientID;
	}

	@Basic
	@Column(name="AD_IMAGE_ID", columnDefinition="INT")
	public Integer getADImageID() {
		return aDImageID;
	}

	public void setADImageID(Integer aDImageID) {
		this.aDImageID = aDImageID;
	}

	@Basic
	@Column(name="AD_ORG_ID", columnDefinition="INT", nullable=false)
	public Integer getADOrgID() {
		return aDOrgID;
	}

	public void setADOrgID(Integer aDOrgID) {
		this.aDOrgID = aDOrgID;
	}

	@Id
	@Column(name="AD_PRINTTABLEFORMAT_ID", columnDefinition="INT")
	@TableGenerator(name = "PkGen_619", table = "ad_sequence", pkColumnName = "name", pkColumnValue = "AD_PrintTableFormat", valueColumnName = "currentnextsys", allocationSize = 1 )
	@GeneratedValue(strategy = GenerationType.TABLE, generator = "PkGen_619")
	public Integer getADPrintTableFormatID() {
		return aDPrintTableFormatID;
	}

	public void setADPrintTableFormatID(Integer aDPrintTableFormatID) {
		this.aDPrintTableFormatID = aDPrintTableFormatID;
	}

	@Basic
	@Column(name="ISACTIVE", nullable=false)
	public Boolean isActive() {
		return active;
	}

	public void setActive(Boolean active) {
		this.active = active;
	}

	@Basic
	@Column(columnDefinition="TIMESTAMP", nullable=false)
	public String getCreated() {
		return created;
	}

	public void setCreated(String created) {
		this.created = created;
	}

	@Basic
	@Column(columnDefinition="INT", nullable=false)
	public Integer getCreatedBy() {
		return createdBy;
	}

	public void setCreatedBy(Integer createdBy) {
		this.createdBy = createdBy;
	}

	@Basic
	public String getDescription() {
		return description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Basic
	public String getFooterCenter() {
		return footerCenter;
	}

	public void setFooterCenter(String footerCenter) {
		this.footerCenter = footerCenter;
	}

	@Basic
	public String getFooterLeft() {
		return footerLeft;
	}

	public void setFooterLeft(String footerLeft) {
		this.footerLeft = footerLeft;
	}

	@Basic
	public String getFooterRight() {
		return footerRight;
	}

	public void setFooterRight(String footerRight) {
		this.footerRight = footerRight;
	}

	@Basic
	@Column(name="FUNCTBG_PRINTCOLOR_ID", columnDefinition="INT")
	public Integer getFunctBGPrintColorID() {
		return functBGPrintColorID;
	}

	public void setFunctBGPrintColorID(Integer functBGPrintColorID) {
		this.functBGPrintColorID = functBGPrintColorID;
	}

	@Basic
	@Column(name="FUNCTFG_PRINTCOLOR_ID", columnDefinition="INT")
	public Integer getFunctFGPrintColorID() {
		return functFGPrintColorID;
	}

	public void setFunctFGPrintColorID(Integer functFGPrintColorID) {
		this.functFGPrintColorID = functFGPrintColorID;
	}

	@Basic
	@Column(name="FUNCT_PRINTFONT_ID", columnDefinition="INT")
	public Integer getFunctPrintFontID() {
		return functPrintFontID;
	}

	public void setFunctPrintFontID(Integer functPrintFontID) {
		this.functPrintFontID = functPrintFontID;
	}

	@Basic
	@Column(name="HDRLINE_PRINTCOLOR_ID", columnDefinition="INT")
	public Integer getHdrLinePrintColorID() {
		return hdrLinePrintColorID;
	}

	public void setHdrLinePrintColorID(Integer hdrLinePrintColorID) {
		this.hdrLinePrintColorID = hdrLinePrintColorID;
	}

	@Basic
	@Column(name="HDR_PRINTFONT_ID", columnDefinition="INT")
	public Integer getHdrPrintFontID() {
		return hdrPrintFontID;
	}

	public void setHdrPrintFontID(Integer hdrPrintFontID) {
		this.hdrPrintFontID = hdrPrintFontID;
	}

	@Basic
	public BigDecimal getHdrStroke() {
		return hdrStroke;
	}

	public void setHdrStroke(BigDecimal hdrStroke) {
		this.hdrStroke = hdrStroke;
	}

	@Basic
	@Column(length=1)
	public String getHdrStrokeType() {
		return hdrStrokeType;
	}

	public void setHdrStrokeType(String hdrStrokeType) {
		this.hdrStrokeType = hdrStrokeType;
	}

	@Basic
	@Column(name="HDRTEXTBG_PRINTCOLOR_ID", columnDefinition="INT")
	public Integer getHdrTextBGPrintColorID() {
		return hdrTextBGPrintColorID;
	}

	public void setHdrTextBGPrintColorID(Integer hdrTextBGPrintColorID) {
		this.hdrTextBGPrintColorID = hdrTextBGPrintColorID;
	}

	@Basic
	@Column(name="HDRTEXTFG_PRINTCOLOR_ID", columnDefinition="INT")
	public Integer getHdrTextFGPrintColorID() {
		return hdrTextFGPrintColorID;
	}

	public void setHdrTextFGPrintColorID(Integer hdrTextFGPrintColorID) {
		this.hdrTextFGPrintColorID = hdrTextFGPrintColorID;
	}

	@Basic
	public String getHeaderCenter() {
		return headerCenter;
	}

	public void setHeaderCenter(String headerCenter) {
		this.headerCenter = headerCenter;
	}

	@Basic
	public String getHeaderLeft() {
		return headerLeft;
	}

	public void setHeaderLeft(String headerLeft) {
		this.headerLeft = headerLeft;
	}

	@Basic
	public String getHeaderRight() {
		return headerRight;
	}

	public void setHeaderRight(String headerRight) {
		this.headerRight = headerRight;
	}

	@Basic
	public Boolean isImageIsAttached() {
		return imageIsAttached;
	}

	public void setImageIsAttached(Boolean imageIsAttached) {
		this.imageIsAttached = imageIsAttached;
	}

	@Basic
	@Column(length=120)
	public String getImageURL() {
		return imageURL;
	}

	public void setImageURL(String imageURL) {
		this.imageURL = imageURL;
	}

	@Basic
	@Column(nullable=false)
	public Boolean isIsDefault() {
		return isDefault;
	}

	public void setIsDefault(Boolean isDefault) {
		this.isDefault = isDefault;
	}

	@Basic
	@Column(name="LINE_PRINTCOLOR_ID", columnDefinition="INT")
	public Integer getLinePrintColorID() {
		return linePrintColorID;
	}

	public void setLinePrintColorID(Integer linePrintColorID) {
		this.linePrintColorID = linePrintColorID;
	}

	@Basic
	public BigDecimal getLineStroke() {
		return lineStroke;
	}

	public void setLineStroke(BigDecimal lineStroke) {
		this.lineStroke = lineStroke;
	}

	@Basic
	@Column(length=1)
	public String getLineStrokeType() {
		return lineStrokeType;
	}

	public void setLineStrokeType(String lineStrokeType) {
		this.lineStrokeType = lineStrokeType;
	}

	@Basic
	@Column(name="ISMULTILINEHEADER", nullable=false)
	public Boolean isMultiLineHeader() {
		return multiLineHeader;
	}

	public void setMultiLineHeader(Boolean multiLineHeader) {
		this.multiLineHeader = multiLineHeader;
	}

	@Basic
	@Column(nullable=false, length=60)
	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Basic
	@Column(name="ISPAINTBOUNDARYLINES", nullable=false)
	public Boolean isPaintBoundaryLines() {
		return paintBoundaryLines;
	}

	public void setPaintBoundaryLines(Boolean paintBoundaryLines) {
		this.paintBoundaryLines = paintBoundaryLines;
	}

	@Basic
	@Column(name="ISPAINTHLINES", nullable=false)
	public Boolean isPaintHLines() {
		return paintHLines;
	}

	public void setPaintHLines(Boolean paintHLines) {
		this.paintHLines = paintHLines;
	}

	@Basic
	@Column(name="ISPAINTHEADERLINES", nullable=false)
	public Boolean isPaintHeaderLines() {
		return paintHeaderLines;
	}

	public void setPaintHeaderLines(Boolean paintHeaderLines) {
		this.paintHeaderLines = paintHeaderLines;
	}

	@Basic
	@Column(name="ISPAINTVLINES", nullable=false)
	public Boolean isPaintVLines() {
		return paintVLines;
	}

	public void setPaintVLines(Boolean paintVLines) {
		this.paintVLines = paintVLines;
	}

	@Basic
	@Column(name="ISPRINTFUNCTIONSYMBOLS", nullable=false)
	public Boolean isPrintFunctionSymbols() {
		return printFunctionSymbols;
	}

	public void setPrintFunctionSymbols(Boolean printFunctionSymbols) {
		this.printFunctionSymbols = printFunctionSymbols;
	}

	@Basic
	@Column(columnDefinition="TIMESTAMP", nullable=false)
	public String getUpdated() {
		return updated;
	}

	public void setUpdated(String updated) {
		this.updated = updated;
	}

	@Basic
	@Column(columnDefinition="INT", nullable=false)
	public Integer getUpdatedBy() {
		return updatedBy;
	}

	public void setUpdatedBy(Integer updatedBy) {
		this.updatedBy = updatedBy;
	}
}