package org.adempiere.model;

import javax.persistence.*;

/**
 * Auto-generated by:
 * org.adempiere.AdempiereCustomizer
 */
@Entity
@Table(name="m_perpetualinv")
public class MPerpetualInv extends org.adempiere.common.ADEntityBase {
	private static final long serialVersionUID = 1L;
	private Integer aDClientID;
	private Integer aDOrgID;
	private Boolean active;
	private Boolean countHighMovement;
	private String created;
	private Integer createdBy;
	private String dateLastRun;
	private String dateNextRun;
	private String description;
	private Integer mPerpetualInvID;
	private Integer mProductCategoryID;
	private Integer mWarehouseID;
	private String name;
	private Integer noInventoryCount;
	private Integer noProductCount;
	private Integer numberOfRuns;
	private Boolean processing;
	private String updated;
	private Integer updatedBy;

	public MPerpetualInv() {
	}

	public MPerpetualInv(Integer mPerpetualInvID) {
		this.mPerpetualInvID = mPerpetualInvID;
	}

	@Basic
	@Column(name="AD_CLIENT_ID", columnDefinition="INT", nullable=false)
	public Integer getADClientID() {
		return aDClientID;
	}

	public void setADClientID(Integer aDClientID) {
		this.aDClientID = aDClientID;
	}

	@Basic
	@Column(name="AD_ORG_ID", columnDefinition="INT", nullable=false)
	public Integer getADOrgID() {
		return aDOrgID;
	}

	public void setADOrgID(Integer aDOrgID) {
		this.aDOrgID = aDOrgID;
	}

	@Basic
	@Column(name="ISACTIVE", nullable=false)
	public Boolean isActive() {
		return active;
	}

	public void setActive(Boolean active) {
		this.active = active;
	}

	@Basic
	@Column(nullable=false)
	public Boolean isCountHighMovement() {
		return countHighMovement;
	}

	public void setCountHighMovement(Boolean countHighMovement) {
		this.countHighMovement = countHighMovement;
	}

	@Basic
	@Column(columnDefinition="TIMESTAMP", nullable=false)
	public String getCreated() {
		return created;
	}

	public void setCreated(String created) {
		this.created = created;
	}

	@Basic
	@Column(columnDefinition="INT", nullable=false)
	public Integer getCreatedBy() {
		return createdBy;
	}

	public void setCreatedBy(Integer createdBy) {
		this.createdBy = createdBy;
	}

	@Basic
	public String getDateLastRun() {
		return dateLastRun;
	}

	public void setDateLastRun(String dateLastRun) {
		this.dateLastRun = dateLastRun;
	}

	@Basic
	@Column(nullable=false)
	public String getDateNextRun() {
		return dateNextRun;
	}

	public void setDateNextRun(String dateNextRun) {
		this.dateNextRun = dateNextRun;
	}

	@Basic
	public String getDescription() {
		return description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Id
	@Column(name="M_PERPETUALINV_ID", columnDefinition="INT")
	@TableGenerator(name = "PkGen_269", table = "ad_sequence", pkColumnName = "name", pkColumnValue = "M_PerpetualInv", valueColumnName = "currentnextsys", allocationSize = 1 )
	@GeneratedValue(strategy = GenerationType.TABLE, generator = "PkGen_269")
	public Integer getMPerpetualInvID() {
		return mPerpetualInvID;
	}

	public void setMPerpetualInvID(Integer mPerpetualInvID) {
		this.mPerpetualInvID = mPerpetualInvID;
	}

	@Basic
	@Column(name="M_PRODUCT_CATEGORY_ID", columnDefinition="INT")
	public Integer getMProductCategoryID() {
		return mProductCategoryID;
	}

	public void setMProductCategoryID(Integer mProductCategoryID) {
		this.mProductCategoryID = mProductCategoryID;
	}

	@Basic
	@Column(name="M_WAREHOUSE_ID", columnDefinition="INT")
	public Integer getMWarehouseID() {
		return mWarehouseID;
	}

	public void setMWarehouseID(Integer mWarehouseID) {
		this.mWarehouseID = mWarehouseID;
	}

	@Basic
	@Column(nullable=false, length=60)
	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Basic
	@Column(columnDefinition="INT", nullable=false)
	public Integer getNoInventoryCount() {
		return noInventoryCount;
	}

	public void setNoInventoryCount(Integer noInventoryCount) {
		this.noInventoryCount = noInventoryCount;
	}

	@Basic
	@Column(columnDefinition="INT", nullable=false)
	public Integer getNoProductCount() {
		return noProductCount;
	}

	public void setNoProductCount(Integer noProductCount) {
		this.noProductCount = noProductCount;
	}

	@Basic
	@Column(columnDefinition="INT", nullable=false)
	public Integer getNumberOfRuns() {
		return numberOfRuns;
	}

	public void setNumberOfRuns(Integer numberOfRuns) {
		this.numberOfRuns = numberOfRuns;
	}

	@Basic
	public Boolean isProcessing() {
		return processing;
	}

	public void setProcessing(Boolean processing) {
		this.processing = processing;
	}

	@Basic
	@Column(columnDefinition="TIMESTAMP", nullable=false)
	public String getUpdated() {
		return updated;
	}

	public void setUpdated(String updated) {
		this.updated = updated;
	}

	@Basic
	@Column(columnDefinition="INT", nullable=false)
	public Integer getUpdatedBy() {
		return updatedBy;
	}

	public void setUpdatedBy(Integer updatedBy) {
		this.updatedBy = updatedBy;
	}
}