package org.adempiere.model;

import java.math.*;
import javax.persistence.*;

/**
 * Auto-generated by:
 * org.adempiere.AdempiereCustomizer
 */
@Entity
@Table(name="c_paymentallocate")
public class CPaymentAllocate extends org.adempiere.common.ADEntityBase {
	private static final long serialVersionUID = 1L;
	private Integer aDClientID;
	private Integer aDOrgID;
	private Boolean active;
	private BigDecimal amount;
	private Integer cAllocationLineID;
	private Integer cInvoiceID;
	private Integer cPaymentAllocateID;
	private Integer cPaymentID;
	private String created;
	private Integer createdBy;
	private BigDecimal discountAmt;
	private BigDecimal invoiceAmt;
	private BigDecimal overUnderAmt;
	private String updated;
	private Integer updatedBy;
	private BigDecimal writeOffAmt;

	public CPaymentAllocate() {
	}

	public CPaymentAllocate(Integer cPaymentAllocateID) {
		this.cPaymentAllocateID = cPaymentAllocateID;
	}

	@Basic
	@Column(name="AD_CLIENT_ID", columnDefinition="INT", nullable=false)
	public Integer getADClientID() {
		return aDClientID;
	}

	public void setADClientID(Integer aDClientID) {
		this.aDClientID = aDClientID;
	}

	@Basic
	@Column(name="AD_ORG_ID", columnDefinition="INT", nullable=false)
	public Integer getADOrgID() {
		return aDOrgID;
	}

	public void setADOrgID(Integer aDOrgID) {
		this.aDOrgID = aDOrgID;
	}

	@Basic
	@Column(name="ISACTIVE", nullable=false)
	public Boolean isActive() {
		return active;
	}

	public void setActive(Boolean active) {
		this.active = active;
	}

	@Basic
	@Column(nullable=false)
	public BigDecimal getAmount() {
		return amount;
	}

	public void setAmount(BigDecimal amount) {
		this.amount = amount;
	}

	@Basic
	@Column(name="C_ALLOCATIONLINE_ID", columnDefinition="INT")
	public Integer getCAllocationLineID() {
		return cAllocationLineID;
	}

	public void setCAllocationLineID(Integer cAllocationLineID) {
		this.cAllocationLineID = cAllocationLineID;
	}

	@Basic
	@Column(name="C_INVOICE_ID", columnDefinition="INT", nullable=false)
	public Integer getCInvoiceID() {
		return cInvoiceID;
	}

	public void setCInvoiceID(Integer cInvoiceID) {
		this.cInvoiceID = cInvoiceID;
	}

	@Id
	@Column(name="C_PAYMENTALLOCATE_ID", columnDefinition="INT")
	@TableGenerator(name = "PkGen_1172", table = "ad_sequence", pkColumnName = "name", pkColumnValue = "C_PaymentAllocate", valueColumnName = "currentnextsys", allocationSize = 1 )
	@GeneratedValue(strategy = GenerationType.TABLE, generator = "PkGen_1172")
	public Integer getCPaymentAllocateID() {
		return cPaymentAllocateID;
	}

	public void setCPaymentAllocateID(Integer cPaymentAllocateID) {
		this.cPaymentAllocateID = cPaymentAllocateID;
	}

	@Basic
	@Column(name="C_PAYMENT_ID", columnDefinition="INT", nullable=false)
	public Integer getCPaymentID() {
		return cPaymentID;
	}

	public void setCPaymentID(Integer cPaymentID) {
		this.cPaymentID = cPaymentID;
	}

	@Basic
	@Column(columnDefinition="TIMESTAMP", nullable=false)
	public String getCreated() {
		return created;
	}

	public void setCreated(String created) {
		this.created = created;
	}

	@Basic
	@Column(columnDefinition="INT", nullable=false)
	public Integer getCreatedBy() {
		return createdBy;
	}

	public void setCreatedBy(Integer createdBy) {
		this.createdBy = createdBy;
	}

	@Basic
	@Column(nullable=false)
	public BigDecimal getDiscountAmt() {
		return discountAmt;
	}

	public void setDiscountAmt(BigDecimal discountAmt) {
		this.discountAmt = discountAmt;
	}

	@Basic
	public BigDecimal getInvoiceAmt() {
		return invoiceAmt;
	}

	public void setInvoiceAmt(BigDecimal invoiceAmt) {
		this.invoiceAmt = invoiceAmt;
	}

	@Basic
	@Column(nullable=false)
	public BigDecimal getOverUnderAmt() {
		return overUnderAmt;
	}

	public void setOverUnderAmt(BigDecimal overUnderAmt) {
		this.overUnderAmt = overUnderAmt;
	}

	@Basic
	@Column(columnDefinition="TIMESTAMP", nullable=false)
	public String getUpdated() {
		return updated;
	}

	public void setUpdated(String updated) {
		this.updated = updated;
	}

	@Basic
	@Column(columnDefinition="INT", nullable=false)
	public Integer getUpdatedBy() {
		return updatedBy;
	}

	public void setUpdatedBy(Integer updatedBy) {
		this.updatedBy = updatedBy;
	}

	@Basic
	@Column(nullable=false)
	public BigDecimal getWriteOffAmt() {
		return writeOffAmt;
	}

	public void setWriteOffAmt(BigDecimal writeOffAmt) {
		this.writeOffAmt = writeOffAmt;
	}
}