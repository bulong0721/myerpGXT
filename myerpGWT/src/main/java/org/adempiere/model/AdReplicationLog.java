package org.adempiere.model;

import javax.persistence.*;

/**
 * Auto-generated by:
 * org.adempiere.AdempiereCustomizer
 */
@Entity
@Table(name="ad_replication_log")
public class AdReplicationLog extends org.adempiere.common.ADEntityBase {
	private static final long serialVersionUID = 1L;
	private Integer adClientId;
	private Integer adOrgId;
	private Integer adReplicationLogId;
	private Integer adReplicationRunId;
	private Integer adReplicationtableId;
	private String created;
	private Integer createdby;
	private Boolean isactive;
	private Boolean isreplicated;
	private String pMsg;
	private String updated;
	private Integer updatedby;

	public AdReplicationLog() {
	}

	public AdReplicationLog(Integer adReplicationLogId) {
		this.adReplicationLogId = adReplicationLogId;
	}

	@Basic
	@Column(name="AD_CLIENT_ID", columnDefinition="INT", nullable=false)
	public Integer getAdClientId() {
		return adClientId;
	}

	public void setAdClientId(Integer adClientId) {
		this.adClientId = adClientId;
	}

	@Basic
	@Column(name="AD_ORG_ID", columnDefinition="INT", nullable=false)
	public Integer getAdOrgId() {
		return adOrgId;
	}

	public void setAdOrgId(Integer adOrgId) {
		this.adOrgId = adOrgId;
	}

	@Id
	@Column(name="AD_REPLICATION_LOG_ID", columnDefinition="INT")
	@TableGenerator(name = "PkGen_773", table = "ad_sequence", pkColumnName = "name", pkColumnValue = "AD_Replication_Log", valueColumnName = "currentnextsys", allocationSize = 1 )
	@GeneratedValue(strategy = GenerationType.TABLE, generator = "PkGen_773")
	public Integer getAdReplicationLogId() {
		return adReplicationLogId;
	}

	public void setAdReplicationLogId(Integer adReplicationLogId) {
		this.adReplicationLogId = adReplicationLogId;
	}

	@Basic
	@Column(name="AD_REPLICATION_RUN_ID", columnDefinition="INT", nullable=false)
	public Integer getAdReplicationRunId() {
		return adReplicationRunId;
	}

	public void setAdReplicationRunId(Integer adReplicationRunId) {
		this.adReplicationRunId = adReplicationRunId;
	}

	@Basic
	@Column(name="AD_REPLICATIONTABLE_ID", columnDefinition="INT")
	public Integer getAdReplicationtableId() {
		return adReplicationtableId;
	}

	public void setAdReplicationtableId(Integer adReplicationtableId) {
		this.adReplicationtableId = adReplicationtableId;
	}

	@Basic
	@Column(columnDefinition="TIMESTAMP", nullable=false)
	public String getCreated() {
		return created;
	}

	public void setCreated(String created) {
		this.created = created;
	}

	@Basic
	@Column(columnDefinition="INT", nullable=false)
	public Integer getCreatedby() {
		return createdby;
	}

	public void setCreatedby(Integer createdby) {
		this.createdby = createdby;
	}

	@Basic
	@Column(nullable=false)
	public Boolean isIsactive() {
		return isactive;
	}

	public void setIsactive(Boolean isactive) {
		this.isactive = isactive;
	}

	@Basic
	@Column(nullable=false)
	public Boolean isIsreplicated() {
		return isreplicated;
	}

	public void setIsreplicated(Boolean isreplicated) {
		this.isreplicated = isreplicated;
	}

	@Basic
	@Column(name="P_MSG", length=2000)
	public String getPMsg() {
		return pMsg;
	}

	public void setPMsg(String pMsg) {
		this.pMsg = pMsg;
	}

	@Basic
	@Column(columnDefinition="TIMESTAMP", nullable=false)
	public String getUpdated() {
		return updated;
	}

	public void setUpdated(String updated) {
		this.updated = updated;
	}

	@Basic
	@Column(columnDefinition="INT", nullable=false)
	public Integer getUpdatedby() {
		return updatedby;
	}

	public void setUpdatedby(Integer updatedby) {
		this.updatedby = updatedby;
	}
}