package org.adempiere.model;

import java.math.*;
import javax.persistence.*;

/**
 * Auto-generated by:
 * org.adempiere.AdempiereCustomizer
 */
@Entity
@Table(name="c_bankstatement")
public class CBankStatement extends org.adempiere.common.ADEntityBase {
	private static final long serialVersionUID = 1L;
	private Integer aDClientID;
	private Integer aDOrgID;
	private Boolean active;
	private Boolean approved;
	private BigDecimal beginningBalance;
	private Integer cBankAccountID;
	private Integer cBankStatementID;
	private Boolean createFrom;
	private String created;
	private Integer createdBy;
	private String description;
	private String docAction;
	private String docStatus;
	private String eftStatementDate;
	private String eftStatementReference;
	private BigDecimal endingBalance;
	private Boolean manual;
	private Boolean matchStatement;
	private String name;
	private Boolean posted;
	private Boolean processed;
	private Long processedOn;
	private Boolean processing;
	private String statementDate;
	private BigDecimal statementDifference;
	private String updated;
	private Integer updatedBy;

	public CBankStatement() {
	}

	public CBankStatement(Integer cBankStatementID) {
		this.cBankStatementID = cBankStatementID;
	}

	@Basic
	@Column(name="AD_CLIENT_ID", columnDefinition="INT", nullable=false)
	public Integer getADClientID() {
		return aDClientID;
	}

	public void setADClientID(Integer aDClientID) {
		this.aDClientID = aDClientID;
	}

	@Basic
	@Column(name="AD_ORG_ID", columnDefinition="INT", nullable=false)
	public Integer getADOrgID() {
		return aDOrgID;
	}

	public void setADOrgID(Integer aDOrgID) {
		this.aDOrgID = aDOrgID;
	}

	@Basic
	@Column(name="ISACTIVE", nullable=false)
	public Boolean isActive() {
		return active;
	}

	public void setActive(Boolean active) {
		this.active = active;
	}

	@Basic
	@Column(name="ISAPPROVED", nullable=false)
	public Boolean isApproved() {
		return approved;
	}

	public void setApproved(Boolean approved) {
		this.approved = approved;
	}

	@Basic
	public BigDecimal getBeginningBalance() {
		return beginningBalance;
	}

	public void setBeginningBalance(BigDecimal beginningBalance) {
		this.beginningBalance = beginningBalance;
	}

	@Basic
	@Column(name="C_BANKACCOUNT_ID", columnDefinition="INT", nullable=false)
	public Integer getCBankAccountID() {
		return cBankAccountID;
	}

	public void setCBankAccountID(Integer cBankAccountID) {
		this.cBankAccountID = cBankAccountID;
	}

	@Id
	@Column(name="C_BANKSTATEMENT_ID", columnDefinition="INT")
	@TableGenerator(name = "PkGen_329", table = "ad_sequence", pkColumnName = "name", pkColumnValue = "C_BankStatement", valueColumnName = "currentnextsys", allocationSize = 1 )
	@GeneratedValue(strategy = GenerationType.TABLE, generator = "PkGen_329")
	public Integer getCBankStatementID() {
		return cBankStatementID;
	}

	public void setCBankStatementID(Integer cBankStatementID) {
		this.cBankStatementID = cBankStatementID;
	}

	@Basic
	public Boolean isCreateFrom() {
		return createFrom;
	}

	public void setCreateFrom(Boolean createFrom) {
		this.createFrom = createFrom;
	}

	@Basic
	@Column(columnDefinition="TIMESTAMP", nullable=false)
	public String getCreated() {
		return created;
	}

	public void setCreated(String created) {
		this.created = created;
	}

	@Basic
	@Column(columnDefinition="INT", nullable=false)
	public Integer getCreatedBy() {
		return createdBy;
	}

	public void setCreatedBy(Integer createdBy) {
		this.createdBy = createdBy;
	}

	@Basic
	public String getDescription() {
		return description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Basic
	@Column(nullable=false, length=2)
	public String getDocAction() {
		return docAction;
	}

	public void setDocAction(String docAction) {
		this.docAction = docAction;
	}

	@Basic
	@Column(nullable=false, length=2)
	public String getDocStatus() {
		return docStatus;
	}

	public void setDocStatus(String docStatus) {
		this.docStatus = docStatus;
	}

	@Basic
	public String getEftStatementDate() {
		return eftStatementDate;
	}

	public void setEftStatementDate(String eftStatementDate) {
		this.eftStatementDate = eftStatementDate;
	}

	@Basic
	@Column(length=60)
	public String getEftStatementReference() {
		return eftStatementReference;
	}

	public void setEftStatementReference(String eftStatementReference) {
		this.eftStatementReference = eftStatementReference;
	}

	@Basic
	@Column(nullable=false)
	public BigDecimal getEndingBalance() {
		return endingBalance;
	}

	public void setEndingBalance(BigDecimal endingBalance) {
		this.endingBalance = endingBalance;
	}

	@Basic
	@Column(name="ISMANUAL", nullable=false)
	public Boolean isManual() {
		return manual;
	}

	public void setManual(Boolean manual) {
		this.manual = manual;
	}

	@Basic
	public Boolean isMatchStatement() {
		return matchStatement;
	}

	public void setMatchStatement(Boolean matchStatement) {
		this.matchStatement = matchStatement;
	}

	@Basic
	@Column(nullable=false, length=60)
	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Basic
	@Column(nullable=false)
	public Boolean isPosted() {
		return posted;
	}

	public void setPosted(Boolean posted) {
		this.posted = posted;
	}

	@Basic
	@Column(nullable=false)
	public Boolean isProcessed() {
		return processed;
	}

	public void setProcessed(Boolean processed) {
		this.processed = processed;
	}

	@Basic
	public Long getProcessedOn() {
		return processedOn;
	}

	public void setProcessedOn(Long processedOn) {
		this.processedOn = processedOn;
	}

	@Basic
	public Boolean isProcessing() {
		return processing;
	}

	public void setProcessing(Boolean processing) {
		this.processing = processing;
	}

	@Basic
	@Column(nullable=false)
	public String getStatementDate() {
		return statementDate;
	}

	public void setStatementDate(String statementDate) {
		this.statementDate = statementDate;
	}

	@Basic
	public BigDecimal getStatementDifference() {
		return statementDifference;
	}

	public void setStatementDifference(BigDecimal statementDifference) {
		this.statementDifference = statementDifference;
	}

	@Basic
	@Column(columnDefinition="TIMESTAMP", nullable=false)
	public String getUpdated() {
		return updated;
	}

	public void setUpdated(String updated) {
		this.updated = updated;
	}

	@Basic
	@Column(columnDefinition="INT", nullable=false)
	public Integer getUpdatedBy() {
		return updatedBy;
	}

	public void setUpdatedBy(Integer updatedBy) {
		this.updatedBy = updatedBy;
	}
}