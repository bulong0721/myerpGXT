package org.adempiere.model;

import javax.persistence.*;

/**
 * Auto-generated by:
 * org.adempiere.AdempiereCustomizer
 */
@Entity
@Table(name="c_doctype")
public class CDocType extends org.adempiere.common.ADEntityBase {
	private static final long serialVersionUID = 1L;
	private Integer aDClientID;
	private Integer aDOrgID;
	private Integer aDPrintFormatID;
	private Boolean active;
	private Integer cDocTypeDifferenceID;
	private Integer cDocTypeID;
	private Integer cDocTypeInvoiceID;
	private Integer cDocTypeProformaID;
	private Integer cDocTypeShipmentID;
	private Boolean createCounter;
	private String created;
	private Integer createdBy;
	private Boolean defaultCounterDoc;
	private Integer definiteSequenceID;
	private String description;
	private String docBaseType;
	private Boolean docNoControlled;
	private Integer docNoSequenceID;
	private String docSubTypeSO;
	private Integer documentCopies;
	private String documentNote;
	private Integer gLCategoryID;
	private Boolean hasCharges;
	private Boolean hasProforma;
	private Boolean inTransit;
	private String indexed;
	private Boolean isDefault;
	private String name;
	private Boolean overwriteDateOnComplete;
	private Boolean overwriteSeqOnComplete;
	private Boolean pickQAConfirm;
	private Boolean prepareSplitDocument;
	private String printName;
	private Boolean sOTrx;
	private Boolean shipConfirm;
	private Boolean splitWhenDifference;
	private String updated;
	private Integer updatedBy;

	public CDocType() {
	}

	public CDocType(Integer cDocTypeID) {
		this.cDocTypeID = cDocTypeID;
	}

	@Basic
	@Column(name="AD_CLIENT_ID", columnDefinition="INT", nullable=false)
	public Integer getADClientID() {
		return aDClientID;
	}

	public void setADClientID(Integer aDClientID) {
		this.aDClientID = aDClientID;
	}

	@Basic
	@Column(name="AD_ORG_ID", columnDefinition="INT", nullable=false)
	public Integer getADOrgID() {
		return aDOrgID;
	}

	public void setADOrgID(Integer aDOrgID) {
		this.aDOrgID = aDOrgID;
	}

	@Basic
	@Column(name="AD_PRINTFORMAT_ID", columnDefinition="INT")
	public Integer getADPrintFormatID() {
		return aDPrintFormatID;
	}

	public void setADPrintFormatID(Integer aDPrintFormatID) {
		this.aDPrintFormatID = aDPrintFormatID;
	}

	@Basic
	@Column(name="ISACTIVE", nullable=false)
	public Boolean isActive() {
		return active;
	}

	public void setActive(Boolean active) {
		this.active = active;
	}

	@Basic
	@Column(name="C_DOCTYPEDIFFERENCE_ID", columnDefinition="INT")
	public Integer getCDocTypeDifferenceID() {
		return cDocTypeDifferenceID;
	}

	public void setCDocTypeDifferenceID(Integer cDocTypeDifferenceID) {
		this.cDocTypeDifferenceID = cDocTypeDifferenceID;
	}

	@Id
	@Column(name="C_DOCTYPE_ID", columnDefinition="INT")
	@TableGenerator(name = "PkGen_133", table = "ad_sequence", pkColumnName = "name", pkColumnValue = "C_DocType", valueColumnName = "currentnextsys", allocationSize = 1 )
	@GeneratedValue(strategy = GenerationType.TABLE, generator = "PkGen_133")
	public Integer getCDocTypeID() {
		return cDocTypeID;
	}

	public void setCDocTypeID(Integer cDocTypeID) {
		this.cDocTypeID = cDocTypeID;
	}

	@Basic
	@Column(name="C_DOCTYPEINVOICE_ID", columnDefinition="INT")
	public Integer getCDocTypeInvoiceID() {
		return cDocTypeInvoiceID;
	}

	public void setCDocTypeInvoiceID(Integer cDocTypeInvoiceID) {
		this.cDocTypeInvoiceID = cDocTypeInvoiceID;
	}

	@Basic
	@Column(name="C_DOCTYPEPROFORMA_ID", columnDefinition="INT")
	public Integer getCDocTypeProformaID() {
		return cDocTypeProformaID;
	}

	public void setCDocTypeProformaID(Integer cDocTypeProformaID) {
		this.cDocTypeProformaID = cDocTypeProformaID;
	}

	@Basic
	@Column(name="C_DOCTYPESHIPMENT_ID", columnDefinition="INT")
	public Integer getCDocTypeShipmentID() {
		return cDocTypeShipmentID;
	}

	public void setCDocTypeShipmentID(Integer cDocTypeShipmentID) {
		this.cDocTypeShipmentID = cDocTypeShipmentID;
	}

	@Basic
	@Column(name="ISCREATECOUNTER", nullable=false)
	public Boolean isCreateCounter() {
		return createCounter;
	}

	public void setCreateCounter(Boolean createCounter) {
		this.createCounter = createCounter;
	}

	@Basic
	@Column(columnDefinition="TIMESTAMP", nullable=false)
	public String getCreated() {
		return created;
	}

	public void setCreated(String created) {
		this.created = created;
	}

	@Basic
	@Column(columnDefinition="INT", nullable=false)
	public Integer getCreatedBy() {
		return createdBy;
	}

	public void setCreatedBy(Integer createdBy) {
		this.createdBy = createdBy;
	}

	@Basic
	@Column(name="ISDEFAULTCOUNTERDOC", nullable=false)
	public Boolean isDefaultCounterDoc() {
		return defaultCounterDoc;
	}

	public void setDefaultCounterDoc(Boolean defaultCounterDoc) {
		this.defaultCounterDoc = defaultCounterDoc;
	}

	@Basic
	@Column(name="DEFINITESEQUENCE_ID", columnDefinition="INT")
	public Integer getDefiniteSequenceID() {
		return definiteSequenceID;
	}

	public void setDefiniteSequenceID(Integer definiteSequenceID) {
		this.definiteSequenceID = definiteSequenceID;
	}

	@Basic
	public String getDescription() {
		return description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Basic
	@Column(nullable=false, length=3)
	public String getDocBaseType() {
		return docBaseType;
	}

	public void setDocBaseType(String docBaseType) {
		this.docBaseType = docBaseType;
	}

	@Basic
	@Column(name="ISDOCNOCONTROLLED", nullable=false)
	public Boolean isDocNoControlled() {
		return docNoControlled;
	}

	public void setDocNoControlled(Boolean docNoControlled) {
		this.docNoControlled = docNoControlled;
	}

	@Basic
	@Column(name="DOCNOSEQUENCE_ID", columnDefinition="INT")
	public Integer getDocNoSequenceID() {
		return docNoSequenceID;
	}

	public void setDocNoSequenceID(Integer docNoSequenceID) {
		this.docNoSequenceID = docNoSequenceID;
	}

	@Basic
	@Column(length=2)
	public String getDocSubTypeSO() {
		return docSubTypeSO;
	}

	public void setDocSubTypeSO(String docSubTypeSO) {
		this.docSubTypeSO = docSubTypeSO;
	}

	@Basic
	@Column(columnDefinition="INT", nullable=false)
	public Integer getDocumentCopies() {
		return documentCopies;
	}

	public void setDocumentCopies(Integer documentCopies) {
		this.documentCopies = documentCopies;
	}

	@Basic
	@Column(length=2000)
	public String getDocumentNote() {
		return documentNote;
	}

	public void setDocumentNote(String documentNote) {
		this.documentNote = documentNote;
	}

	@Basic
	@Column(name="GL_CATEGORY_ID", columnDefinition="INT", nullable=false)
	public Integer getGLCategoryID() {
		return gLCategoryID;
	}

	public void setGLCategoryID(Integer gLCategoryID) {
		this.gLCategoryID = gLCategoryID;
	}

	@Basic
	@Column(nullable=false)
	public Boolean isHasCharges() {
		return hasCharges;
	}

	public void setHasCharges(Boolean hasCharges) {
		this.hasCharges = hasCharges;
	}

	@Basic
	public Boolean isHasProforma() {
		return hasProforma;
	}

	public void setHasProforma(Boolean hasProforma) {
		this.hasProforma = hasProforma;
	}

	@Basic
	@Column(name="ISINTRANSIT", nullable=false)
	public Boolean isInTransit() {
		return inTransit;
	}

	public void setInTransit(Boolean inTransit) {
		this.inTransit = inTransit;
	}

	@Basic
	@Column(name="ISINDEXED", nullable=false, length=1)
	public String getIndexed() {
		return indexed;
	}

	public void setIndexed(String indexed) {
		this.indexed = indexed;
	}

	@Basic
	@Column(nullable=false)
	public Boolean isIsDefault() {
		return isDefault;
	}

	public void setIsDefault(Boolean isDefault) {
		this.isDefault = isDefault;
	}

	@Basic
	@Column(nullable=false, length=60)
	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Basic
	@Column(name="ISOVERWRITEDATEONCOMPLETE")
	public Boolean isOverwriteDateOnComplete() {
		return overwriteDateOnComplete;
	}

	public void setOverwriteDateOnComplete(Boolean overwriteDateOnComplete) {
		this.overwriteDateOnComplete = overwriteDateOnComplete;
	}

	@Basic
	@Column(name="ISOVERWRITESEQONCOMPLETE")
	public Boolean isOverwriteSeqOnComplete() {
		return overwriteSeqOnComplete;
	}

	public void setOverwriteSeqOnComplete(Boolean overwriteSeqOnComplete) {
		this.overwriteSeqOnComplete = overwriteSeqOnComplete;
	}

	@Basic
	@Column(name="ISPICKQACONFIRM", nullable=false)
	public Boolean isPickQAConfirm() {
		return pickQAConfirm;
	}

	public void setPickQAConfirm(Boolean pickQAConfirm) {
		this.pickQAConfirm = pickQAConfirm;
	}

	@Basic
	@Column(name="ISPREPARESPLITDOCUMENT", nullable=false)
	public Boolean isPrepareSplitDocument() {
		return prepareSplitDocument;
	}

	public void setPrepareSplitDocument(Boolean prepareSplitDocument) {
		this.prepareSplitDocument = prepareSplitDocument;
	}

	@Basic
	@Column(nullable=false, length=60)
	public String getPrintName() {
		return printName;
	}

	public void setPrintName(String printName) {
		this.printName = printName;
	}

	@Basic
	@Column(name="ISSOTRX", nullable=false)
	public Boolean isSOTrx() {
		return sOTrx;
	}

	public void setSOTrx(Boolean sOTrx) {
		this.sOTrx = sOTrx;
	}

	@Basic
	@Column(name="ISSHIPCONFIRM", nullable=false)
	public Boolean isShipConfirm() {
		return shipConfirm;
	}

	public void setShipConfirm(Boolean shipConfirm) {
		this.shipConfirm = shipConfirm;
	}

	@Basic
	@Column(name="ISSPLITWHENDIFFERENCE", nullable=false)
	public Boolean isSplitWhenDifference() {
		return splitWhenDifference;
	}

	public void setSplitWhenDifference(Boolean splitWhenDifference) {
		this.splitWhenDifference = splitWhenDifference;
	}

	@Basic
	@Column(columnDefinition="TIMESTAMP", nullable=false)
	public String getUpdated() {
		return updated;
	}

	public void setUpdated(String updated) {
		this.updated = updated;
	}

	@Basic
	@Column(columnDefinition="INT", nullable=false)
	public Integer getUpdatedBy() {
		return updatedBy;
	}

	public void setUpdatedBy(Integer updatedBy) {
		this.updatedBy = updatedBy;
	}
}