package org.adempiere.model;

import java.math.BigDecimal;
import java.util.List;

import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.TableGenerator;

/**
 * Auto-generated by: org.adempiere.AdempiereCustomizer
 */
@Entity
@Table(name = "ad_process")
@Inheritance(strategy = InheritanceType.JOINED)
public class ADProcess extends org.adempiere.common.ADEntityBase {
	private static final long	serialVersionUID	= 1L;
	private Integer				aDClientID;
	private Integer				aDFormID;
	private Integer				aDOrgID;
	private Integer				aDPrintFormatID;
	private Integer				aDProcessID;
	private Integer				aDReportViewID;
	private Integer				aDWorkflowID;
	private String				accessLevel;
	private Boolean				active;
	private Boolean				betaFunctionality;
	private String				classname;
	private Boolean				copyFromProcess;
	private String				created;
	private Integer				createdBy;
	private String				description;
	private Boolean				directPrint;
	private String				entityType;
	private String				help;
	private String				jasperReport;
	private String				name;
	private String				procedureName;
	private Boolean				report;
	private Boolean				serverProcess;
	private String				showHelp;
	private Integer				statisticCount;
	private BigDecimal			statisticSeconds;
	private String				updated;
	private Integer				updatedBy;
	private String				value;
	private String				workflowValue;
	private List<ADProcessPara>	aDProcessParas;

	public ADProcess() {
	}

	public ADProcess(Integer aDProcessID) {
		this.aDProcessID = aDProcessID;
	}

	@Basic
	@Column(name = "AD_CLIENT_ID", columnDefinition = "INT", nullable = false)
	public Integer getADClientID() {
		return aDClientID;
	}

	public void setADClientID(Integer aDClientID) {
		this.aDClientID = aDClientID;
	}

	@Basic
	@Column(name = "AD_FORM_ID", columnDefinition = "INT")
	public Integer getADFormID() {
		return aDFormID;
	}

	public void setADFormID(Integer aDFormID) {
		this.aDFormID = aDFormID;
	}

	@Basic
	@Column(name = "AD_ORG_ID", columnDefinition = "INT", nullable = false)
	public Integer getADOrgID() {
		return aDOrgID;
	}

	public void setADOrgID(Integer aDOrgID) {
		this.aDOrgID = aDOrgID;
	}

	@Basic
	@Column(name = "AD_PRINTFORMAT_ID", columnDefinition = "INT")
	public Integer getADPrintFormatID() {
		return aDPrintFormatID;
	}

	public void setADPrintFormatID(Integer aDPrintFormatID) {
		this.aDPrintFormatID = aDPrintFormatID;
	}

	@Id
	@Column(name = "AD_PROCESS_ID", columnDefinition = "INT")
	@TableGenerator(name = "PkGen_199", table = "ad_sequence", pkColumnName = "name", pkColumnValue = "AD_Process", valueColumnName = "currentnextsys", allocationSize = 1)
	@GeneratedValue(strategy = GenerationType.TABLE, generator = "PkGen_199")
	public Integer getADProcessID() {
		return aDProcessID;
	}

	public void setADProcessID(Integer aDProcessID) {
		this.aDProcessID = aDProcessID;
	}

	@Basic
	@Column(name = "AD_REPORTVIEW_ID", columnDefinition = "INT")
	public Integer getADReportViewID() {
		return aDReportViewID;
	}

	public void setADReportViewID(Integer aDReportViewID) {
		this.aDReportViewID = aDReportViewID;
	}

	@Basic
	@Column(name = "AD_WORKFLOW_ID", columnDefinition = "INT")
	public Integer getADWorkflowID() {
		return aDWorkflowID;
	}

	public void setADWorkflowID(Integer aDWorkflowID) {
		this.aDWorkflowID = aDWorkflowID;
	}

	@Basic
	@Column(nullable = false, length = 1)
	public String getAccessLevel() {
		return accessLevel;
	}

	public void setAccessLevel(String accessLevel) {
		this.accessLevel = accessLevel;
	}

	@Basic
	@Column(name = "ISACTIVE", nullable = false)
	public Boolean isActive() {
		return active;
	}

	public void setActive(Boolean active) {
		this.active = active;
	}

	@Basic
	@Column(name = "ISBETAFUNCTIONALITY", nullable = false)
	public Boolean isBetaFunctionality() {
		return betaFunctionality;
	}

	public void setBetaFunctionality(Boolean betaFunctionality) {
		this.betaFunctionality = betaFunctionality;
	}

	@Basic
	public String getClassname() {
		return classname;
	}

	public void setClassname(String classname) {
		this.classname = classname;
	}

	@Basic
	public Boolean isCopyFromProcess() {
		return copyFromProcess;
	}

	public void setCopyFromProcess(Boolean copyFromProcess) {
		this.copyFromProcess = copyFromProcess;
	}

	@Basic
	@Column(columnDefinition = "TIMESTAMP", nullable = false)
	public String getCreated() {
		return created;
	}

	public void setCreated(String created) {
		this.created = created;
	}

	@Basic
	@Column(columnDefinition = "INT", nullable = false)
	public Integer getCreatedBy() {
		return createdBy;
	}

	public void setCreatedBy(Integer createdBy) {
		this.createdBy = createdBy;
	}

	@Basic
	public String getDescription() {
		return description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Basic
	@Column(name = "ISDIRECTPRINT")
	public Boolean isDirectPrint() {
		return directPrint;
	}

	public void setDirectPrint(Boolean directPrint) {
		this.directPrint = directPrint;
	}

	@Basic
	@Column(nullable = false, length = 40)
	public String getEntityType() {
		return entityType;
	}

	public void setEntityType(String entityType) {
		this.entityType = entityType;
	}

	@Basic
	@Column(length = 2000)
	public String getHelp() {
		return help;
	}

	public void setHelp(String help) {
		this.help = help;
	}

	@Basic
	public String getJasperReport() {
		return jasperReport;
	}

	public void setJasperReport(String jasperReport) {
		this.jasperReport = jasperReport;
	}

	@Basic
	@Column(nullable = false, length = 60)
	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Basic
	@Column(length = 60)
	public String getProcedureName() {
		return procedureName;
	}

	public void setProcedureName(String procedureName) {
		this.procedureName = procedureName;
	}

	@Basic
	@Column(name = "ISREPORT", nullable = false)
	public Boolean isReport() {
		return report;
	}

	public void setReport(Boolean report) {
		this.report = report;
	}

	@Basic
	@Column(name = "ISSERVERPROCESS", nullable = false)
	public Boolean isServerProcess() {
		return serverProcess;
	}

	public void setServerProcess(Boolean serverProcess) {
		this.serverProcess = serverProcess;
	}

	@Basic
	@Column(length = 1)
	public String getShowHelp() {
		return showHelp;
	}

	public void setShowHelp(String showHelp) {
		this.showHelp = showHelp;
	}

	@Basic
	@Column(name = "STATISTIC_COUNT", columnDefinition = "INT")
	public Integer getStatisticCount() {
		return statisticCount;
	}

	public void setStatisticCount(Integer statisticCount) {
		this.statisticCount = statisticCount;
	}

	@Basic
	@Column(name = "STATISTIC_SECONDS")
	public BigDecimal getStatisticSeconds() {
		return statisticSeconds;
	}

	public void setStatisticSeconds(BigDecimal statisticSeconds) {
		this.statisticSeconds = statisticSeconds;
	}

	@Basic
	@Column(columnDefinition = "TIMESTAMP", nullable = false)
	public String getUpdated() {
		return updated;
	}

	public void setUpdated(String updated) {
		this.updated = updated;
	}

	@Basic
	@Column(columnDefinition = "INT", nullable = false)
	public Integer getUpdatedBy() {
		return updatedBy;
	}

	public void setUpdatedBy(Integer updatedBy) {
		this.updatedBy = updatedBy;
	}

	@Basic
	@Column(nullable = false, length = 40)
	public String getValue() {
		return value;
	}

	public void setValue(String value) {
		this.value = value;
	}

	@Basic
	@Column(length = 40)
	public String getWorkflowValue() {
		return workflowValue;
	}

	public void setWorkflowValue(String workflowValue) {
		this.workflowValue = workflowValue;
	}

	// bi-directional many-to-one association to AdProcessPara
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "process")
	public List<ADProcessPara> getADProcessParas() {
		return this.aDProcessParas;
	}

	public void setADProcessParas(List<ADProcessPara> adProcessParas) {
		this.aDProcessParas = adProcessParas;
	}

	public ADProcessPara addAdProcessPara(ADProcessPara adProcessPara) {
		getADProcessParas().add(adProcessPara);
		adProcessPara.setProcess(this);

		return adProcessPara;
	}

	public ADProcessPara removeAdProcessPara(ADProcessPara adProcessPara) {
		getADProcessParas().remove(adProcessPara);
		adProcessPara.setProcess(null);

		return adProcessPara;
	}

}