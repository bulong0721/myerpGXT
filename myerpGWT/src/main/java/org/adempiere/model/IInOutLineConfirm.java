package org.adempiere.model;

import java.math.*;
import javax.persistence.*;

/**
 * Auto-generated by:
 * org.adempiere.AdempiereCustomizer
 */
@Entity
@Table(name="i_inoutlineconfirm")
public class IInOutLineConfirm extends org.adempiere.common.ADEntityBase {
	private static final long serialVersionUID = 1L;
	private Integer aDClientID;
	private Integer aDOrgID;
	private Boolean active;
	private String confirmationNo;
	private BigDecimal confirmedQty;
	private String created;
	private Integer createdBy;
	private String description;
	private BigDecimal differenceQty;
	private String iErrorMsg;
	private Integer iInOutLineConfirmID;
	private Boolean iIsImported;
	private Integer mInOutLineConfirmID;
	private Boolean processed;
	private Boolean processing;
	private BigDecimal scrappedQty;
	private String updated;
	private Integer updatedBy;

	public IInOutLineConfirm() {
	}

	public IInOutLineConfirm(Integer iInOutLineConfirmID) {
		this.iInOutLineConfirmID = iInOutLineConfirmID;
	}

	@Basic
	@Column(name="AD_CLIENT_ID", columnDefinition="INT", nullable=false)
	public Integer getADClientID() {
		return aDClientID;
	}

	public void setADClientID(Integer aDClientID) {
		this.aDClientID = aDClientID;
	}

	@Basic
	@Column(name="AD_ORG_ID", columnDefinition="INT", nullable=false)
	public Integer getADOrgID() {
		return aDOrgID;
	}

	public void setADOrgID(Integer aDOrgID) {
		this.aDOrgID = aDOrgID;
	}

	@Basic
	@Column(name="ISACTIVE", nullable=false)
	public Boolean isActive() {
		return active;
	}

	public void setActive(Boolean active) {
		this.active = active;
	}

	@Basic
	@Column(length=20)
	public String getConfirmationNo() {
		return confirmationNo;
	}

	public void setConfirmationNo(String confirmationNo) {
		this.confirmationNo = confirmationNo;
	}

	@Basic
	public BigDecimal getConfirmedQty() {
		return confirmedQty;
	}

	public void setConfirmedQty(BigDecimal confirmedQty) {
		this.confirmedQty = confirmedQty;
	}

	@Basic
	@Column(columnDefinition="TIMESTAMP", nullable=false)
	public String getCreated() {
		return created;
	}

	public void setCreated(String created) {
		this.created = created;
	}

	@Basic
	@Column(columnDefinition="INT", nullable=false)
	public Integer getCreatedBy() {
		return createdBy;
	}

	public void setCreatedBy(Integer createdBy) {
		this.createdBy = createdBy;
	}

	@Basic
	public String getDescription() {
		return description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Basic
	public BigDecimal getDifferenceQty() {
		return differenceQty;
	}

	public void setDifferenceQty(BigDecimal differenceQty) {
		this.differenceQty = differenceQty;
	}

	@Basic
	@Column(name="I_ERRORMSG", length=2000)
	public String getIErrorMsg() {
		return iErrorMsg;
	}

	public void setIErrorMsg(String iErrorMsg) {
		this.iErrorMsg = iErrorMsg;
	}

	@Id
	@Column(name="I_INOUTLINECONFIRM_ID", columnDefinition="INT")
	@TableGenerator(name = "PkGen_987", table = "ad_sequence", pkColumnName = "name", pkColumnValue = "I_InOutLineConfirm", valueColumnName = "currentnextsys", allocationSize = 1 )
	@GeneratedValue(strategy = GenerationType.TABLE, generator = "PkGen_987")
	public Integer getIInOutLineConfirmID() {
		return iInOutLineConfirmID;
	}

	public void setIInOutLineConfirmID(Integer iInOutLineConfirmID) {
		this.iInOutLineConfirmID = iInOutLineConfirmID;
	}

	@Basic
	@Column(name="I_ISIMPORTED", nullable=false)
	public Boolean isIIsImported() {
		return iIsImported;
	}

	public void setIIsImported(Boolean iIsImported) {
		this.iIsImported = iIsImported;
	}

	@Basic
	@Column(name="M_INOUTLINECONFIRM_ID", columnDefinition="INT")
	public Integer getMInOutLineConfirmID() {
		return mInOutLineConfirmID;
	}

	public void setMInOutLineConfirmID(Integer mInOutLineConfirmID) {
		this.mInOutLineConfirmID = mInOutLineConfirmID;
	}

	@Basic
	@Column(nullable=false)
	public Boolean isProcessed() {
		return processed;
	}

	public void setProcessed(Boolean processed) {
		this.processed = processed;
	}

	@Basic
	public Boolean isProcessing() {
		return processing;
	}

	public void setProcessing(Boolean processing) {
		this.processing = processing;
	}

	@Basic
	public BigDecimal getScrappedQty() {
		return scrappedQty;
	}

	public void setScrappedQty(BigDecimal scrappedQty) {
		this.scrappedQty = scrappedQty;
	}

	@Basic
	@Column(columnDefinition="TIMESTAMP", nullable=false)
	public String getUpdated() {
		return updated;
	}

	public void setUpdated(String updated) {
		this.updated = updated;
	}

	@Basic
	@Column(columnDefinition="INT", nullable=false)
	public Integer getUpdatedBy() {
		return updatedBy;
	}

	public void setUpdatedBy(Integer updatedBy) {
		this.updatedBy = updatedBy;
	}
}