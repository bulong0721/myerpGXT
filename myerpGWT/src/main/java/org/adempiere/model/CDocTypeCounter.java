package org.adempiere.model;

import javax.persistence.*;

/**
 * Auto-generated by:
 * org.adempiere.AdempiereCustomizer
 */
@Entity
@Table(name="c_doctypecounter")
public class CDocTypeCounter extends org.adempiere.common.ADEntityBase {
	private static final long serialVersionUID = 1L;
	private Integer aDClientID;
	private Integer aDOrgID;
	private Boolean active;
	private Integer cDocTypeCounterID;
	private Integer cDocTypeID;
	private Integer counterCDocTypeID;
	private Boolean createCounter;
	private String created;
	private Integer createdBy;
	private String description;
	private String docAction;
	private String name;
	private Boolean processing;
	private String updated;
	private Integer updatedBy;
	private Boolean valid;

	public CDocTypeCounter() {
	}

	public CDocTypeCounter(Integer cDocTypeCounterID) {
		this.cDocTypeCounterID = cDocTypeCounterID;
	}

	@Basic
	@Column(name="AD_CLIENT_ID", columnDefinition="INT", nullable=false)
	public Integer getADClientID() {
		return aDClientID;
	}

	public void setADClientID(Integer aDClientID) {
		this.aDClientID = aDClientID;
	}

	@Basic
	@Column(name="AD_ORG_ID", columnDefinition="INT", nullable=false)
	public Integer getADOrgID() {
		return aDOrgID;
	}

	public void setADOrgID(Integer aDOrgID) {
		this.aDOrgID = aDOrgID;
	}

	@Basic
	@Column(name="ISACTIVE", nullable=false)
	public Boolean isActive() {
		return active;
	}

	public void setActive(Boolean active) {
		this.active = active;
	}

	@Id
	@Column(name="C_DOCTYPECOUNTER_ID", columnDefinition="INT")
	@TableGenerator(name = "PkGen_945", table = "ad_sequence", pkColumnName = "name", pkColumnValue = "C_DocTypeCounter", valueColumnName = "currentnextsys", allocationSize = 1 )
	@GeneratedValue(strategy = GenerationType.TABLE, generator = "PkGen_945")
	public Integer getCDocTypeCounterID() {
		return cDocTypeCounterID;
	}

	public void setCDocTypeCounterID(Integer cDocTypeCounterID) {
		this.cDocTypeCounterID = cDocTypeCounterID;
	}

	@Basic
	@Column(name="C_DOCTYPE_ID", columnDefinition="INT", nullable=false)
	public Integer getCDocTypeID() {
		return cDocTypeID;
	}

	public void setCDocTypeID(Integer cDocTypeID) {
		this.cDocTypeID = cDocTypeID;
	}

	@Basic
	@Column(name="COUNTER_C_DOCTYPE_ID", columnDefinition="INT")
	public Integer getCounterCDocTypeID() {
		return counterCDocTypeID;
	}

	public void setCounterCDocTypeID(Integer counterCDocTypeID) {
		this.counterCDocTypeID = counterCDocTypeID;
	}

	@Basic
	@Column(name="ISCREATECOUNTER", nullable=false)
	public Boolean isCreateCounter() {
		return createCounter;
	}

	public void setCreateCounter(Boolean createCounter) {
		this.createCounter = createCounter;
	}

	@Basic
	@Column(columnDefinition="TIMESTAMP", nullable=false)
	public String getCreated() {
		return created;
	}

	public void setCreated(String created) {
		this.created = created;
	}

	@Basic
	@Column(columnDefinition="INT", nullable=false)
	public Integer getCreatedBy() {
		return createdBy;
	}

	public void setCreatedBy(Integer createdBy) {
		this.createdBy = createdBy;
	}

	@Basic
	public String getDescription() {
		return description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Basic
	@Column(length=2)
	public String getDocAction() {
		return docAction;
	}

	public void setDocAction(String docAction) {
		this.docAction = docAction;
	}

	@Basic
	@Column(nullable=false, length=60)
	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Basic
	public Boolean isProcessing() {
		return processing;
	}

	public void setProcessing(Boolean processing) {
		this.processing = processing;
	}

	@Basic
	@Column(columnDefinition="TIMESTAMP", nullable=false)
	public String getUpdated() {
		return updated;
	}

	public void setUpdated(String updated) {
		this.updated = updated;
	}

	@Basic
	@Column(columnDefinition="INT", nullable=false)
	public Integer getUpdatedBy() {
		return updatedBy;
	}

	public void setUpdatedBy(Integer updatedBy) {
		this.updatedBy = updatedBy;
	}

	@Basic
	@Column(name="ISVALID", nullable=false)
	public Boolean isValid() {
		return valid;
	}

	public void setValid(Boolean valid) {
		this.valid = valid;
	}
}