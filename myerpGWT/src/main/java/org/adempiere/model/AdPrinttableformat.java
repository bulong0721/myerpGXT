package org.adempiere.model;

import java.math.*;
import javax.persistence.*;

/**
 * Auto-generated by:
 * org.adempiere.AdempiereCustomizer
 */
@Entity
@Table(name="ad_printtableformat")
public class AdPrinttableformat extends org.adempiere.common.ADEntityBase {
	private static final long serialVersionUID = 1L;
	private Integer adClientId;
	private Integer adImageId;
	private Integer adOrgId;
	private Integer adPrinttableformatId;
	private String created;
	private Integer createdby;
	private String description;
	private String footercenter;
	private String footerleft;
	private String footerright;
	private Integer functPrintfontId;
	private Integer functbgPrintcolorId;
	private Integer functfgPrintcolorId;
	private Integer hdrPrintfontId;
	private Integer hdrlinePrintcolorId;
	private BigDecimal hdrstroke;
	private String hdrstroketype;
	private Integer hdrtextbgPrintcolorId;
	private Integer hdrtextfgPrintcolorId;
	private String headercenter;
	private String headerleft;
	private String headerright;
	private Boolean imageisattached;
	private String imageurl;
	private Boolean isactive;
	private Boolean isdefault;
	private Boolean ismultilineheader;
	private Boolean ispaintboundarylines;
	private Boolean ispaintheaderlines;
	private Boolean ispainthlines;
	private Boolean ispaintvlines;
	private Boolean isprintfunctionsymbols;
	private Integer linePrintcolorId;
	private BigDecimal linestroke;
	private String linestroketype;
	private String name;
	private String updated;
	private Integer updatedby;

	public AdPrinttableformat() {
	}

	public AdPrinttableformat(Integer adPrinttableformatId) {
		this.adPrinttableformatId = adPrinttableformatId;
	}

	@Basic
	@Column(name="AD_CLIENT_ID", columnDefinition="INT", nullable=false)
	public Integer getAdClientId() {
		return adClientId;
	}

	public void setAdClientId(Integer adClientId) {
		this.adClientId = adClientId;
	}

	@Basic
	@Column(name="AD_IMAGE_ID", columnDefinition="INT")
	public Integer getAdImageId() {
		return adImageId;
	}

	public void setAdImageId(Integer adImageId) {
		this.adImageId = adImageId;
	}

	@Basic
	@Column(name="AD_ORG_ID", columnDefinition="INT", nullable=false)
	public Integer getAdOrgId() {
		return adOrgId;
	}

	public void setAdOrgId(Integer adOrgId) {
		this.adOrgId = adOrgId;
	}

	@Id
	@Column(name="AD_PRINTTABLEFORMAT_ID", columnDefinition="INT")
	@TableGenerator(name = "PkGen_619", table = "ad_sequence", pkColumnName = "name", pkColumnValue = "AD_PrintTableFormat", valueColumnName = "currentnextsys", allocationSize = 1 )
	@GeneratedValue(strategy = GenerationType.TABLE, generator = "PkGen_619")
	public Integer getAdPrinttableformatId() {
		return adPrinttableformatId;
	}

	public void setAdPrinttableformatId(Integer adPrinttableformatId) {
		this.adPrinttableformatId = adPrinttableformatId;
	}

	@Basic
	@Column(columnDefinition="TIMESTAMP", nullable=false)
	public String getCreated() {
		return created;
	}

	public void setCreated(String created) {
		this.created = created;
	}

	@Basic
	@Column(columnDefinition="INT", nullable=false)
	public Integer getCreatedby() {
		return createdby;
	}

	public void setCreatedby(Integer createdby) {
		this.createdby = createdby;
	}

	@Basic
	public String getDescription() {
		return description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Basic
	public String getFootercenter() {
		return footercenter;
	}

	public void setFootercenter(String footercenter) {
		this.footercenter = footercenter;
	}

	@Basic
	public String getFooterleft() {
		return footerleft;
	}

	public void setFooterleft(String footerleft) {
		this.footerleft = footerleft;
	}

	@Basic
	public String getFooterright() {
		return footerright;
	}

	public void setFooterright(String footerright) {
		this.footerright = footerright;
	}

	@Basic
	@Column(name="FUNCT_PRINTFONT_ID", columnDefinition="INT")
	public Integer getFunctPrintfontId() {
		return functPrintfontId;
	}

	public void setFunctPrintfontId(Integer functPrintfontId) {
		this.functPrintfontId = functPrintfontId;
	}

	@Basic
	@Column(name="FUNCTBG_PRINTCOLOR_ID", columnDefinition="INT")
	public Integer getFunctbgPrintcolorId() {
		return functbgPrintcolorId;
	}

	public void setFunctbgPrintcolorId(Integer functbgPrintcolorId) {
		this.functbgPrintcolorId = functbgPrintcolorId;
	}

	@Basic
	@Column(name="FUNCTFG_PRINTCOLOR_ID", columnDefinition="INT")
	public Integer getFunctfgPrintcolorId() {
		return functfgPrintcolorId;
	}

	public void setFunctfgPrintcolorId(Integer functfgPrintcolorId) {
		this.functfgPrintcolorId = functfgPrintcolorId;
	}

	@Basic
	@Column(name="HDR_PRINTFONT_ID", columnDefinition="INT")
	public Integer getHdrPrintfontId() {
		return hdrPrintfontId;
	}

	public void setHdrPrintfontId(Integer hdrPrintfontId) {
		this.hdrPrintfontId = hdrPrintfontId;
	}

	@Basic
	@Column(name="HDRLINE_PRINTCOLOR_ID", columnDefinition="INT")
	public Integer getHdrlinePrintcolorId() {
		return hdrlinePrintcolorId;
	}

	public void setHdrlinePrintcolorId(Integer hdrlinePrintcolorId) {
		this.hdrlinePrintcolorId = hdrlinePrintcolorId;
	}

	@Basic
	public BigDecimal getHdrstroke() {
		return hdrstroke;
	}

	public void setHdrstroke(BigDecimal hdrstroke) {
		this.hdrstroke = hdrstroke;
	}

	@Basic
	@Column(length=1)
	public String getHdrstroketype() {
		return hdrstroketype;
	}

	public void setHdrstroketype(String hdrstroketype) {
		this.hdrstroketype = hdrstroketype;
	}

	@Basic
	@Column(name="HDRTEXTBG_PRINTCOLOR_ID", columnDefinition="INT")
	public Integer getHdrtextbgPrintcolorId() {
		return hdrtextbgPrintcolorId;
	}

	public void setHdrtextbgPrintcolorId(Integer hdrtextbgPrintcolorId) {
		this.hdrtextbgPrintcolorId = hdrtextbgPrintcolorId;
	}

	@Basic
	@Column(name="HDRTEXTFG_PRINTCOLOR_ID", columnDefinition="INT")
	public Integer getHdrtextfgPrintcolorId() {
		return hdrtextfgPrintcolorId;
	}

	public void setHdrtextfgPrintcolorId(Integer hdrtextfgPrintcolorId) {
		this.hdrtextfgPrintcolorId = hdrtextfgPrintcolorId;
	}

	@Basic
	public String getHeadercenter() {
		return headercenter;
	}

	public void setHeadercenter(String headercenter) {
		this.headercenter = headercenter;
	}

	@Basic
	public String getHeaderleft() {
		return headerleft;
	}

	public void setHeaderleft(String headerleft) {
		this.headerleft = headerleft;
	}

	@Basic
	public String getHeaderright() {
		return headerright;
	}

	public void setHeaderright(String headerright) {
		this.headerright = headerright;
	}

	@Basic
	public Boolean isImageisattached() {
		return imageisattached;
	}

	public void setImageisattached(Boolean imageisattached) {
		this.imageisattached = imageisattached;
	}

	@Basic
	@Column(length=120)
	public String getImageurl() {
		return imageurl;
	}

	public void setImageurl(String imageurl) {
		this.imageurl = imageurl;
	}

	@Basic
	@Column(nullable=false)
	public Boolean isIsactive() {
		return isactive;
	}

	public void setIsactive(Boolean isactive) {
		this.isactive = isactive;
	}

	@Basic
	@Column(nullable=false)
	public Boolean isIsdefault() {
		return isdefault;
	}

	public void setIsdefault(Boolean isdefault) {
		this.isdefault = isdefault;
	}

	@Basic
	@Column(nullable=false)
	public Boolean isIsmultilineheader() {
		return ismultilineheader;
	}

	public void setIsmultilineheader(Boolean ismultilineheader) {
		this.ismultilineheader = ismultilineheader;
	}

	@Basic
	@Column(nullable=false)
	public Boolean isIspaintboundarylines() {
		return ispaintboundarylines;
	}

	public void setIspaintboundarylines(Boolean ispaintboundarylines) {
		this.ispaintboundarylines = ispaintboundarylines;
	}

	@Basic
	@Column(nullable=false)
	public Boolean isIspaintheaderlines() {
		return ispaintheaderlines;
	}

	public void setIspaintheaderlines(Boolean ispaintheaderlines) {
		this.ispaintheaderlines = ispaintheaderlines;
	}

	@Basic
	@Column(nullable=false)
	public Boolean isIspainthlines() {
		return ispainthlines;
	}

	public void setIspainthlines(Boolean ispainthlines) {
		this.ispainthlines = ispainthlines;
	}

	@Basic
	@Column(nullable=false)
	public Boolean isIspaintvlines() {
		return ispaintvlines;
	}

	public void setIspaintvlines(Boolean ispaintvlines) {
		this.ispaintvlines = ispaintvlines;
	}

	@Basic
	@Column(nullable=false)
	public Boolean isIsprintfunctionsymbols() {
		return isprintfunctionsymbols;
	}

	public void setIsprintfunctionsymbols(Boolean isprintfunctionsymbols) {
		this.isprintfunctionsymbols = isprintfunctionsymbols;
	}

	@Basic
	@Column(name="LINE_PRINTCOLOR_ID", columnDefinition="INT")
	public Integer getLinePrintcolorId() {
		return linePrintcolorId;
	}

	public void setLinePrintcolorId(Integer linePrintcolorId) {
		this.linePrintcolorId = linePrintcolorId;
	}

	@Basic
	public BigDecimal getLinestroke() {
		return linestroke;
	}

	public void setLinestroke(BigDecimal linestroke) {
		this.linestroke = linestroke;
	}

	@Basic
	@Column(length=1)
	public String getLinestroketype() {
		return linestroketype;
	}

	public void setLinestroketype(String linestroketype) {
		this.linestroketype = linestroketype;
	}

	@Basic
	@Column(nullable=false, length=60)
	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Basic
	@Column(columnDefinition="TIMESTAMP", nullable=false)
	public String getUpdated() {
		return updated;
	}

	public void setUpdated(String updated) {
		this.updated = updated;
	}

	@Basic
	@Column(columnDefinition="INT", nullable=false)
	public Integer getUpdatedby() {
		return updatedby;
	}

	public void setUpdatedby(Integer updatedby) {
		this.updatedby = updatedby;
	}
}